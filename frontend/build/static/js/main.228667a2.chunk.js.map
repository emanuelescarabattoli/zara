{"version":3,"sources":["store/client.js","store/resolvers.js","utils/ProvateRoute.js","containers/Demo/Demo.js","containers/Login/Content.js","containers/Login/Login.js","components/TwoSections/TwoSections.js","components/Page/Page.js","queries/index.js","utils/utils.js","components/Card/Card.js","containers/Dashboard/Content.js","containers/Dashboard/Dashboard.js","components/Delete/Delete.js","components/ButtonPlus/ButtonPlus.js","containers/Counters/List.js","containers/Counters/Counters.js","components/FieldText/FieldText.js","components/Button/Button.js","components/Total/Total.js","components/Modal/Modal.js","containers/Counter/Detail.js","containers/Counter/Counter.js","containers/Totals/List.js","containers/Totals/Totals.js","components/FieldSelect/FieldSelect.js","containers/Total/Detail.js","containers/Total/Total.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["link","createHttpLink","uri","process","credentials","cache","InMemoryCache","client","ApolloClient","ApolloLink","from","withClientState","defaults","containers","__typename","dashboard","default","resolvers","Mutation","QUERY","gql","_templateObject","PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","react_apollo_browser_umd","query","_ref2","loading","error","data","Route","assign","render","props","me","userneme","Redirect","to","Counters","List","className","Login","document","location","href","Login_Content","TwoSections","title","children","Page","Link","components_TwoSections_TwoSections","QUERY_LIST_COUNTER","queries_templateObject","MUTATION_DELETE_COUNTER","_templateObject2","QUERY_DETAIL_COUNTER","_templateObject3","MUTATION_CREATE_COUNTER","_templateObject4","MUTATION_UPDATE_COUNTER","_templateObject5","MUTATION_CREATE_COUNTER_ROW","_templateObject6","MUTATION_UPDATE_COUNTER_ROW","_templateObject7","MUTATION_DELETE_COUNTER_ROW","_templateObject8","QUERY_LIST_TOTAL","_templateObject9","MUTATION_DELETE_TOTAL","_templateObject10","QUERY_DETAIL_TOTAL","_templateObject11","MUTATION_CREATE_TOTAL","_templateObject12","MUTATION_UPDATE_TOTAL","_templateObject13","MUTATION_CREATE_TOTAL_ROW","_templateObject14","MUTATION_UPDATE_TOTAL_ROW","_templateObject15","MUTATION_DELETE_TOTAL_ROW","_templateObject16","QUERY_LIST_TOTAL_WITH_COUNTERS","_templateObject17","formatNumber","number","toLocaleString","minimumFractionDigits","maximumFractionDigits","COLORS","Card","CardHeader","CardSection","CardBody","Content","list","map","item","Card_Card","Card_CardHeader","Card_CardBody","PieChart","width","height","Pie","dataKey","nameKey","cx","cy","fill","entry","index","Cell","key","length","Legend","Dashboard","adaptList","result","_this","listTotal","total","totalAmount","totalrowSet","totalRow","amount","counter","counterrowSet","reduce","sum","value","push","name","Math","abs","content","this","Dashboard_Content","components_Page_Page","compose","graphql","Delete","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","confirm","_this2","onClick","setState","Button","id","components_Delete_Delete","onDelete","ButtonPlus","delete","variables","pk","Counters_List","listCounter","options","notifyOnNetworkStatusChange","refetchQueries","FieldText","htmlFor","description","type","onChange","placeholder","helpText","messages","join","disabled","Total","column","undefined","Modal","isVisible","onCloseModal","components_Button_Button","onValidate","Detail","onSave","components_FieldText_FieldText","detail","errors","find","field","Card_CardSection","buttonAddDisabled","clickAdd","clickEdit","date","period","clickDelete","colSpan","components_Total_Total","components_Modal_Modal","modalVisible","closeModal","onSaveRow","rowDetail","onChangeRow","rowErrors","Counter","save","then","response","errorOrRedirect","saveRow","errorOrCloseModal","update","create","objectSpread","updateRow","createRow","mutationCounter","errorRow","mutationCounterRow","resetRow","history","errorOrOpenModalOnAdd","openModal","errorOrOpenModalOnEdit","row","e","defineProperty","target","detailCounter","match","params","Counter_Detail","fetchPolicy","Totals","Totals_List","FieldSelect","option","label","chartData","components_FieldSelect_FieldSelect","counterList","mutationTotal","mutationTotalRow","adaptCounterList","queryListCounter","adaptTotalRowList","detailTotal","Total_Detail","App","Fragment","exact","path","Demo","ProvateRoute_PrivateRoute","Boolean","window","hostname","ReactDOM","BrowserRouter","containers_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.228667a2.chunk.js","sourcesContent":["import { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { withClientState } from \"apollo-link-state\";\nimport { ApolloLink } from \"apollo-link\";\n\nimport { defaults, resolvers } from \"./resolvers\";\n\nconst link = createHttpLink({\n  uri: process.env.REACT_APP_BASE_URL + \"/app/graphql\",\n  credentials: \"include\"\n});\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  cache,\n  link: ApolloLink.from([\n    withClientState({\n      defaults,\n      resolvers,\n      cache\n    }),\n    link\n  ])\n});\n\nexport default client;\n","export const resolvers = {\n  Mutation: {}\n};\n\nexport const defaults = {\n  containers: {\n    __typename: \"Containers\",\n    dashboard: {\n      __typename: \"Container\",\n      default: null\n    }\n  }\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst QUERY = gql`\n  {\n    me {\n      username\n    }\n  }\n`;\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Query query={QUERY}>\n    {({ loading, error, data }) => {\n      if (loading) return <div />;\n      return (\n        <Route\n          {...rest}\n          render={props => {\n            if (error || data.me.userneme) {\n              return <Redirect to=\"login\" />;\n            }\n            return <Component {...props} />;\n          }}\n        />\n      );\n    }}\n  </Query>\n);","import React, { Component } from \"react\";\n\nimport \"./Demo.css\";\n\nclass Counters extends Component {\n  render() {\n    return (\n      <div />\n    );\n  }\n}\n\nexport default Counters;\n","import React from \"react\";\n\nconst List = () => {\n  return (\n    <div className=\"login-redirect\">\n      <span>Redirecting...</span>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\n\nimport Content from \"./Content\";\n\nimport \"./Login.css\";\n\nclass Login extends Component {\n  componentDidMount() {\n    document.location.href = \"/accounts/login\";\n  }\n\n  render() {\n    return <Content />;\n  }\n}\n\nexport default Login;\n","import React from \"react\";\n\nexport const TwoSections = props => {\n  return (\n    <div className=\"grid\">\n      <div className=\"col-6 veritical-align-center\">\n        <h4 className=\"title-bar-title\">{props.title}</h4>\n      </div>\n      <div className=\"col-6 align-right\">\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default TwoSections;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TwoSections from \"../TwoSections/TwoSections\";\n\nconst Page = props => (\n  <div className=\"page\">\n    <div className=\"sidebar\">\n      <span className=\"logo\">\n        <i className=\"fas fa-chart-pie icon\" />\n        Zara\n      </span>\n      <div className=\"menu-buttons\">\n        <Link className=\"button button-light\" to=\"/counter\">\n          <i className=\"fas fa-plus fa-spacing\" />\n          New counter\n        </Link>\n      </div>\n      <ul className=\"menu\">\n        <li>\n          <Link to=\"/dashboard\">\n            <i className=\"fas fa-chart-area fa-spacing\" />\n            Dashboard\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/counters\">\n            <i className=\"fas fa-cube fa-spacing\" />\n            Counters\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/totals\">\n            <i className=\"fas fa-cubes fa-spacing\" />\n            Totals\n          </Link>\n        </li>\n      </ul>\n    </div>\n    <div className=\"content\">\n      <div className=\"title\">\n        <TwoSections title={props.title}>\n          <a className=\"logout\" href=\"/accounts/logout\">\n            <i className=\"fas fa-sign-out-alt  fa-spacing\" />\n            Logout\n          </a>\n        </TwoSections>\n      </div>\n      <div className=\"main\">{props.children}</div>\n    </div>\n  </div>\n);\n\nexport default Page;\n","import gql from \"graphql-tag\";\n\nexport const QUERY_LIST_COUNTER = gql`\n  {\n    listCounter {\n      id\n      title\n    }\n  }\n`;\n\nexport const MUTATION_DELETE_COUNTER = gql`\n  mutation mutationDeleteCounter($pk: Int!) {\n    mutationDeleteCounter(pk: $pk) {\n      success\n    }\n  }\n`;\n\nexport const QUERY_DETAIL_COUNTER = gql`\n  query($id: Int) {\n    detailCounter(id: $id) {\n      id\n      title\n      counterrowSet {\n        id\n        date\n        description\n        period\n        amount\n      }\n    }\n  }\n`;\n\nexport const MUTATION_CREATE_COUNTER = gql`\n  mutation createCounter($title: String!) {\n    mutationCounter(input: { title: $title }) {\n      counter {\n        id\n      }\n      errors {\n        field\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_UPDATE_COUNTER = gql`\n  mutation updateCounter($id: ID!, $title: String!) {\n    mutationCounter(input: { id: $id, title: $title }) {\n      counter {\n        id\n      }\n      errors {\n        field\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_CREATE_COUNTER_ROW = gql`\n  mutation mutationCounterRow($counter: ID!, $date: Date!, $description: String!, $period: String!, $amount: Float!) {\n    mutationCounterRow(\n      input: { counter: $counter, date: $date, description: $description, period: $period, amount: $amount }\n    ) {\n      counterRow {\n        id\n      }\n      errors {\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_UPDATE_COUNTER_ROW = gql`\n  mutation mutationCounterRow(\n    $id: ID!\n    $counter: ID!\n    $date: Date!\n    $description: String!\n    $period: String!\n    $amount: Float!\n  ) {\n    mutationCounterRow(\n      input: { id: $id, counter: $counter, date: $date, description: $description, period: $period, amount: $amount }\n    ) {\n      counterRow {\n        id\n      }\n      errors {\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_DELETE_COUNTER_ROW = gql`\n  mutation mutationDeleteCounterRow($pk: Int!) {\n    mutationDeleteCounterRow(pk: $pk) {\n      success\n    }\n  }\n`;\n\nexport const QUERY_LIST_TOTAL = gql`\n  {\n    listTotal {\n      id\n      title\n    }\n  }\n`;\n\nexport const MUTATION_DELETE_TOTAL = gql`\n  mutation mutationDeleteTotal($pk: Int!) {\n    mutationDeleteTotal(pk: $pk) {\n      success\n    }\n  }\n`;\n\nexport const QUERY_DETAIL_TOTAL = gql`\n  query($id: Int) {\n    detailTotal(id: $id) {\n      id\n      title\n      totalrowSet {\n        id\n        counter {\n          id\n          title\n          counterrowSet {\n            amount\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const MUTATION_CREATE_TOTAL = gql`\n  mutation createTotal($title: String!) {\n    mutationTotal(input: { title: $title }) {\n      total {\n        id\n      }\n      errors {\n        field\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_UPDATE_TOTAL = gql`\n  mutation updateTotal($id: ID!, $title: String!) {\n    mutationTotal(input: { id: $id, title: $title }) {\n      total {\n        id\n      }\n      errors {\n        field\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_CREATE_TOTAL_ROW = gql`\n  mutation mutationTotalRow($total: ID!, $counter: ID!) {\n    mutationTotalRow(input: { total: $total, counter: $counter }) {\n      totalRow {\n        id\n      }\n      errors {\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_UPDATE_TOTAL_ROW = gql`\n  mutation mutationTotalRow($id: ID!, $total: ID!, $counter: ID!) {\n    mutationTotalRow(input: { id: $id, total: $total, counter: $counter }) {\n      totalRow {\n        id\n      }\n      errors {\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_DELETE_TOTAL_ROW = gql`\n  mutation mutationDeleteTotalRow($pk: Int!) {\n    mutationDeleteTotalRow(pk: $pk) {\n      success\n    }\n  }\n`;\n\nexport const QUERY_LIST_TOTAL_WITH_COUNTERS = gql`\n  {\n    listTotal {\n      title\n      totalrowSet {\n        counter {\n          title\n          counterrowSet {\n            description\n            amount\n          }\n        }\n      }\n    }\n  }\n`;\n","export const formatNumber = number =>\n  number ? number.toLocaleString(\"en\", { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : \"0.00\";\n\nexport const COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\n","import React from \"react\";\n\nexport const Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport const CardHeader = props => {\n  return <div className=\"card-header\">{props.children}</div>;\n};\n\nexport const CardSection = props => {\n  return <div className=\"card-section\">{props.children}</div>;\n};\n\nexport const CardBody = props => {\n  return <div className=\"card-body\">{props.children}</div>;\n};\n\nexport const CardButtons = props => {\n  return <div className=\"card-buttons\">{props.children}</div>;\n};\n\nexport default Card;","import React from \"react\";\nimport { PieChart, Pie, Legend, Cell } from \"recharts\";\n\nimport { Card, CardHeader, CardBody } from \"../../components/Card/Card\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport { COLORS } from \"../../utils/utils\";\n\nconst Content = props => {\n  return (\n    <div>\n      <div className=\"grid\">\n        {props.list.map(item => {\n          return (\n            <div className=\"col-6\">\n              <Card>\n                <CardHeader>\n                  <TwoSections title={item.title} />\n                </CardHeader>\n                <CardBody>\n                  <div className=\"horizontal-align-center \">\n                    <PieChart width={300} height={300}>\n                      <Pie data={item.data} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" fill=\"red\">\n                        {item.data.map((entry, index) => (\n                          <Cell key={index} fill={COLORS[index % COLORS.length]} />\n                        ))}\n                      </Pie>\n                      <Legend />\n                    </PieChart>\n                  </div>\n                </CardBody>\n              </Card>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Content;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport Page from \"../../components/Page/Page\";\nimport { QUERY_LIST_TOTAL_WITH_COUNTERS } from \"../../queries/index\";\nimport { formatNumber } from \"../../utils/utils\";\nimport Content from \"./Content\";\n\nimport \"./Dashboard.css\";\n\nclass Dashboard extends Component {\n  adaptList = () => {\n    let result = [];\n    this.props.query.listTotal.map(total => {\n      let item = { title: \"\", data: [] };\n      let totalAmount = 0;\n      total.totalrowSet.map(totalRow => {\n        const amount = totalRow.counter.counterrowSet.reduce((sum, value) => sum + value.amount, 0);\n        item.data.push({ name: totalRow.counter.title + \" (€ \" + formatNumber(amount) + \")\", value: Math.abs(amount) });\n        totalAmount += amount;\n        return null;\n      });\n      item.title = total.title + \" (€ \" + formatNumber(totalAmount) + \")\"\n      result.push(item);\n      return null;\n    });\n    return result;\n  };\n\n  render() {\n    let content;\n\n    if (this.props.query.loading) {\n      content = \"Loading...\";\n    } else {\n      content = <Content list={this.adaptList()} />;\n    }\n\n    return <Page title=\"Dashboard\">{content}</Page>;\n  }\n}\n\nexport default compose(graphql(QUERY_LIST_TOTAL_WITH_COUNTERS, { name: \"query\" }))(Dashboard);\n","import React, { Component } from \"react\";\n\nclass Delete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirm: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"delete\">\n        {!this.state.confirm ? (\n          <div>\n            <button className=\"button-icon red\" onClick={() => this.setState({ confirm: true })}>\n              <i className=\"fa fa-trash\" />\n            </button>\n          </div>\n        ) : null}\n        {this.state.confirm ? (\n          <div>\n            <button\n              className=\"button-icon green\"\n              onClick={() => {\n                return this.props.onClick();\n              }}\n            >\n              <i className=\"fa fa-check\" />\n            </button>\n            <button className=\"button-icon red\" onClick={() => this.setState({ confirm: false })}>\n              <i className=\"fa fa-times\" />\n            </button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Delete;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Button = props => {\n  return <Link className=\"button button-plus\" to={props.link}><i className=\"fas fa-plus\" /></Link>;\n};\n\nexport default Button;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Card, CardHeader } from \"../../components/Card/Card\";\nimport Delete from \"../../components/Delete/Delete\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport ButtonPlus from \"../../components/ButtonPlus/ButtonPlus\";\n\nconst List = props => {\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <TwoSections title=\"Your counters\" />\n        </CardHeader>\n        <table>\n          <thead>\n            <tr>\n              <th width=\"5%\">Id</th>\n              <th>Title</th>\n              <th width=\"60px\" />\n            </tr>\n          </thead>\n          <tbody>\n            {props.list.map(item => {\n              return (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n                  <td>\n                    <Link to={\"/counter/\" + item.id}>{item.title}</Link>\n                  </td>\n                  <td>\n                    <Delete onClick={() => props.onDelete(item.id)} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </Card>\n      <ButtonPlus link=\"/counter\" />\n    </div>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport {\n  QUERY_LIST_COUNTER,\n  MUTATION_DELETE_COUNTER\n} from \"../../queries/index\";\nimport Page from \"../../components/Page/Page\";\nimport List from \"./List\";\n\nimport \"./Counters.css\";\n\nclass Counters extends Component {\n  onDelete = id => {\n    this.props.delete({ variables: { pk: id } });\n  };\n\n  render() {\n    let content;\n\n    if (this.props.query.loading) {\n      content = \"Loading...\";\n    } else {\n      content = (\n        <List list={this.props.query.listCounter} onDelete={this.onDelete} />\n      );\n    }\n\n    return <Page title=\"Counters\">{content}</Page>;\n  }\n}\n\nexport default compose(\n  graphql(QUERY_LIST_COUNTER, {\n    name: \"query\",\n    options: { notifyOnNetworkStatusChange: true }\n  }),\n  graphql(MUTATION_DELETE_COUNTER, {\n    name: \"delete\",\n    options: { refetchQueries: [{ query: QUERY_LIST_COUNTER }] }\n  })\n)(Counters);\n","import React from \"react\";\n\nconst FieldText = props => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name}>{props.description}</label>\n      <input\n        name={props.name}\n        type={props.type ? props.type : \"text\"}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.helpText}\n      />\n      <small>{props.error && props.error.messages.join(\", \")}</small>\n    </div>\n  );\n};\n\nexport default FieldText;\n","import React from \"react\";\n\nconst Button = props => {\n  return <button disabled={props.disabled} className=\"button\" onClick={props.onClick}>{props.children}</button>;\n};\n\nexport default Button;","import React from \"react\";\n\nimport { formatNumber } from \"../../utils/utils\";\n\nconst Total = props => {\n  return (\n    <span className=\"total\">\n      {props.list.length === 0\n        ? formatNumber(0)\n        : props.list.length === 1\n        ? formatNumber(props.list[0][props.column])\n        : formatNumber(\n            props.list.reduce((total, item) =>\n              total[props.column] !== undefined ? total[props.column] + item[props.column] : total + item[props.column]\n            )\n          )}{\" \"}\n      &euro;\n    </span>\n  );\n};\n\nexport default Total;\n","import React from \"react\";\n\nimport TwoSections from \"../TwoSections/TwoSections\";\nimport Button from \"../Button/Button\";\n\nconst Modal = props => {\n  return (\n    <div className={props.isVisible ? \"modal\" : \"modal hidden\"}>\n      <div>\n        <TwoSections title={props.title}>\n          <span className=\"pointer\" onClick={props.onCloseModal}>\n            <i className=\"fas fa-times\" />\n          </span>\n        </TwoSections>\n        <div>{props.children}</div>\n        <Button onClick={props.onValidate}>Save</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nimport { formatNumber } from \"../../utils/utils\";\nimport FieldText from \"../../components/FieldText/FieldText\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardSection\n} from \"../../components/Card/Card\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport Button from \"../../components/Button/Button\";\nimport Delete from \"../../components/Delete/Delete\";\nimport Total from \"../../components/Total/Total\";\nimport Modal from \"../../components/Modal/Modal\";\n\nconst Detail = props => {\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <TwoSections title=\"Counter detail\">\n            <Button onClick={props.onSave}>Save</Button>\n          </TwoSections>\n        </CardHeader>\n        <CardBody>\n          <div>\n            <FieldText\n              name=\"title\"\n              description=\"Title\"\n              value={props.detail.title}\n              helpText=\"Title of conter\"\n              onChange={props.onChange}\n              error={props.errors.find(error => error.field === \"title\")}\n            />\n          </div>\n        </CardBody>\n        <CardSection>\n          <TwoSections title=\"Rows\">\n            <Button disabled={props.buttonAddDisabled} onClick={props.clickAdd}>\n              Add\n            </Button>\n          </TwoSections>\n        </CardSection>\n        <table>\n          <thead>\n            <tr>\n              <th width=\"5%\">Id</th>\n              <th>Description</th>\n              <th>Date</th>\n              <th>Period</th>\n              <th className=\"align-right\">Amount</th>\n              <th width=\"60px\" />\n            </tr>\n          </thead>\n          <tbody>\n            {props.list &&\n              props.list.map(item => {\n                return (\n                  <tr key={item.id}>\n                    <td>{item.id}</td>\n                    <td>\n                      <button onClick={() => props.clickEdit(item.id)}>\n                        {item.description}\n                      </button>\n                    </td>\n                    <td>{item.date}</td>\n                    <td>{item.period}</td>\n                    <td className=\"align-right\">\n                      {formatNumber(item.amount)} &euro;\n                    </td>\n                    <td>\n                      <Delete onClick={() => props.clickDelete(item.id)} />\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colSpan={5} className=\"align-right\">\n                <Total list={props.list || []} column=\"amount\" />\n              </td>\n              <td colSpan={1} />\n            </tr>\n          </tfoot>\n        </table>\n      </Card>\n      <Modal\n        title=\"Add a counter row\"\n        isVisible={props.modalVisible}\n        onCloseModal={props.closeModal}\n        onValidate={props.onSaveRow}\n      >\n        <div className=\"grid\">\n          <div className=\"col-2\">\n            <FieldText\n              type=\"date\"\n              name=\"date\"\n              description=\"Date\"\n              value={props.rowDetail.date}\n              helpText=\"Date of counter row\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(error => error.field === \"date\")}\n            />\n          </div>\n          <div className=\"col-6\">\n            <FieldText\n              name=\"description\"\n              description=\"Description\"\n              value={props.rowDetail.description}\n              helpText=\"Description of counter row\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(\n                error => error.field === \"description\"\n              )}\n            />\n          </div>\n          <div className=\"col-2\">\n            <FieldText\n              name=\"period\"\n              description=\"Period\"\n              value={props.rowDetail.period}\n              helpText=\"Period of counter row\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(error => error.field === \"period\")}\n            />\n          </div>\n          <div className=\"col-2\">\n            <FieldText\n              name=\"amount\"\n              description=\"Amount\"\n              value={props.rowDetail.amount}\n              helpText=\"Amount of counter row\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(error => error.field === \"amount\")}\n            />\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport {\n  QUERY_DETAIL_COUNTER,\n  MUTATION_CREATE_COUNTER,\n  MUTATION_UPDATE_COUNTER,\n  QUERY_LIST_COUNTER,\n  MUTATION_CREATE_COUNTER_ROW,\n  MUTATION_UPDATE_COUNTER_ROW,\n  MUTATION_DELETE_COUNTER_ROW\n} from \"../../queries/index\";\nimport Page from \"../../components/Page/Page\";\nimport Detail from \"./Detail\";\n\nimport \"./Counter.css\";\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: 0,\n      detail: { title: \"\" },\n      errors: [],\n      rowDetail: { description: \"\", date: \"\", period: \"\", amount: \"\" },\n      rowErrors: [],\n      modalVisible: false\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.query.detailCounter) {\n      this.setState({ id: props.match.params.id });\n      this.setState({ detail: props.query.detailCounter });\n    }\n  }\n\n  onSave = () => this.save().then(response => this.errorOrRedirect(response));\n\n  onSaveRow = () => this.saveRow().then(response => this.errorOrCloseModal(response));\n\n  save = () => {\n    if (this.state.id) {\n      return this.props.update({\n        variables: { id: this.state.id, title: this.state.detail.title }\n      });\n    }\n    return this.props.create({ variables: { ...this.state.detail } });\n  };\n\n  saveRow = () => {\n    if (this.state.rowDetail.id) {\n      return this.props.updateRow({\n        variables: { ...this.state.rowDetail, counter: this.state.id }\n      });\n    }\n    return this.props.createRow({\n      variables: { ...this.state.rowDetail, counter: this.state.id }\n    });\n  };\n\n  error = response => this.setState({ errors: response.data.mutationCounter.errors });\n\n  errorRow = response => this.setState({ rowErrors: response.data.mutationCounterRow.errors });\n\n  resetRow = () =>\n    this.setState({\n      rowDetail: { description: \"\", date: \"\", period: \"\", amount: \"\" },\n      rowErrors: []\n    });\n\n  errorOrRedirect = response => {\n    if (response.data.mutationCounter.errors.length > 0) {\n      return this.error(response);\n    }\n    return this.props.history.push(\"/counter/\" + response.data.mutationCounter.counter.id);\n  };\n\n  errorOrOpenModalOnAdd = response => {\n    if (response.data.mutationCounter.errors.length > 0) {\n      return this.error(response);\n    }\n    this.resetRow();\n    return this.openModal();\n  };\n\n  errorOrOpenModalOnEdit = (response, id) => {\n    if (response.data.mutationCounter.errors.length > 0) {\n      return this.error(response);\n    }\n\n    const detail = this.state.detail.counterrowSet.find(row => row.id === id);\n\n    this.setState({ rowDetail: detail });\n\n    return this.openModal();\n  };\n\n  errorOrCloseModal = response => {\n    if (response.data.mutationCounterRow.errors.length > 0) {\n      this.errorRow(response);\n    }\n    this.resetRow();\n    return this.closeModal();\n  };\n\n  openModal = () => this.setState({ modalVisible: true });\n\n  closeModal = () => this.setState({ modalVisible: false });\n\n  clickAdd = () => this.save().then(response => this.errorOrOpenModalOnAdd(response));\n\n  onChange = e =>\n    this.setState({\n      detail: { ...this.state.detail, [e.target.name]: e.target.value }\n    });\n\n  onChangeRow = e =>\n    this.setState({\n      rowDetail: { ...this.state.rowDetail, [e.target.name]: e.target.value }\n    });\n\n  clickEdit = id => this.save().then(response => this.errorOrOpenModalOnEdit(response, id));\n\n  clickDelete = id => this.props.delete({ variables: { pk: id } });\n\n  buttonAddDisabled = () => this.state.id === 0;\n\n  render() {\n    let content;\n\n    if (this.props.query.loading) {\n      content = \"Loading...\";\n    } else {\n      content = (\n        <Detail\n          detail={this.state.detail}\n          onChange={this.onChange}\n          onSave={this.onSave}\n          errors={this.state.errors}\n          list={this.state.detail.counterrowSet}\n          clickAdd={this.clickAdd}\n          closeModal={this.closeModal}\n          modalVisible={this.state.modalVisible}\n          rowDetail={this.state.rowDetail}\n          rowErrors={this.state.rowErrors}\n          onChangeRow={this.onChangeRow}\n          onSaveRow={this.onSaveRow}\n          clickEdit={this.clickEdit}\n          clickDelete={this.clickDelete}\n          buttonAddDisabled={this.buttonAddDisabled()}\n        />\n      );\n    }\n\n    return <Page title=\"Counter\">{content}</Page>;\n  }\n}\n\nexport default compose(\n  graphql(QUERY_DETAIL_COUNTER, {\n    name: \"query\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      variables: { id: props.match.params.id },\n      fetchPolicy: \"network-only\"\n    })\n  }),\n  graphql(MUTATION_CREATE_COUNTER, {\n    name: \"create\",\n    options: { refetchQueries: [{ query: QUERY_LIST_COUNTER }] }\n  }),\n  graphql(MUTATION_UPDATE_COUNTER, {\n    name: \"update\",\n    options: { refetchQueries: [{ query: QUERY_LIST_COUNTER }] }\n  }),\n  graphql(MUTATION_CREATE_COUNTER_ROW, {\n    name: \"createRow\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_COUNTER,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(MUTATION_UPDATE_COUNTER_ROW, {\n    name: \"updateRow\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_COUNTER,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(MUTATION_DELETE_COUNTER_ROW, {\n    name: \"delete\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_COUNTER,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  })\n)(Counter);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Card, CardHeader } from \"../../components/Card/Card\";\nimport Delete from \"../../components/Delete/Delete\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport ButtonPlus from \"../../components/ButtonPlus/ButtonPlus\";\n\nconst List = props => {\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <TwoSections title=\"Your totals\" />\n        </CardHeader>\n        <table>\n          <thead>\n            <tr>\n              <th width=\"5%\">Id</th>\n              <th>Title</th>\n              <th width=\"60px\" />\n            </tr>\n          </thead>\n          <tbody>\n            {props.list.map(item => {\n              return (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n                  <td>\n                    <Link to={\"/total/\" + item.id}>{item.title}</Link>\n                  </td>\n                  <td>\n                    <Delete onClick={() => props.onDelete(item.id)} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </Card>\n      <ButtonPlus link=\"/total\" />\n    </div>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport { QUERY_LIST_TOTAL, MUTATION_DELETE_TOTAL } from \"../../queries/index\";\nimport Page from \"../../components/Page/Page\";\nimport List from \"./List\";\n\nimport \"./Totals.css\";\n\nclass Totals extends Component {\n  onDelete = id => {\n    this.props.delete({ variables: { pk: id } });\n  };\n\n  render() {\n    let content;\n\n    if (this.props.query.loading) {\n      content = \"Loading...\";\n    } else {\n      content = <List list={this.props.query.listTotal} onDelete={this.onDelete} />;\n    }\n\n    return <Page title=\"Totals\">{content}</Page>;\n  }\n}\n\nexport default compose(\n  graphql(QUERY_LIST_TOTAL, {\n    name: \"query\",\n    options: { notifyOnNetworkStatusChange: true }\n  }),\n  graphql(MUTATION_DELETE_TOTAL, {\n    name: \"delete\",\n    options: { refetchQueries: [{ query: QUERY_LIST_TOTAL }] }\n  })\n)(Totals);\n","import React from \"react\";\n\nconst FieldSelect = props => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name}>{props.description}</label>\n      <select name={props.name} value={props.value} onChange={props.onChange}>\n        <option value={undefined}>----</option>\n        {props.options.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n      <small>{props.error && props.error.messages.join(\", \")}</small>\n    </div>\n  );\n};\n\nexport default FieldSelect;\n","import React from \"react\";\nimport { PieChart, Pie, Legend, Cell } from \"recharts\";\n\nimport { formatNumber } from \"../../utils/utils\";\nimport FieldText from \"../../components/FieldText/FieldText\";\nimport FieldSelect from \"../../components/FieldSelect/FieldSelect\";\nimport { Card, CardBody, CardHeader, CardSection } from \"../../components/Card/Card\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport Button from \"../../components/Button/Button\";\nimport Delete from \"../../components/Delete/Delete\";\nimport Total from \"../../components/Total/Total\";\nimport Modal from \"../../components/Modal/Modal\";\nimport { COLORS } from \"../../utils/utils\";\n\nconst Detail = props => {\n  return (\n    <div>\n      <div className=\"grid\">\n        <div className=\"col-7\">\n          <Card>\n            <CardHeader>\n              <TwoSections title=\"Total detail\">\n                <Button onClick={props.onSave}>Save</Button>\n              </TwoSections>\n            </CardHeader>\n            <CardBody>\n              <div>\n                <FieldText\n                  name=\"title\"\n                  description=\"Title\"\n                  value={props.detail.title}\n                  helpText=\"Title of total\"\n                  onChange={props.onChange}\n                  error={props.errors.find(error => error.field === \"title\")}\n                />\n              </div>\n            </CardBody>\n            <CardSection>\n              <TwoSections title=\"Rows\">\n                <Button disabled={props.buttonAddDisabled} onClick={props.clickAdd}>\n                  Add\n                </Button>\n              </TwoSections>\n            </CardSection>\n            <table>\n              <thead>\n                <tr>\n                  <th width=\"5%\">Id</th>\n                  <th>Counter</th>\n                  <th className=\"align-right\">Amount</th>\n                  <th width=\"60px\" />\n                </tr>\n              </thead>\n              <tbody>\n                {props.list &&\n                  props.list.map(item => {\n                    return (\n                      <tr key={item.id}>\n                        <td>{item.id}</td>\n                        <td>\n                          <button onClick={() => props.clickEdit(item.id)}>{item.title}</button>\n                        </td>\n                        <td className=\"align-right\">{formatNumber(item.amount)} &euro;</td>\n                        <td>\n                          <Delete onClick={() => props.clickDelete(item.id)} />\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n              <tfoot>\n                <tr>\n                  <td colSpan={3} className=\"align-right\">\n                    <Total list={props.list} column=\"amount\" />\n                  </td>\n                  <td colSpan={1} />\n                </tr>\n              </tfoot>\n            </table>\n          </Card>\n        </div>\n        <div className=\"col-5\">\n          <Card>\n            <CardHeader>\n              <TwoSections title=\"Chart\" />\n            </CardHeader>\n            <CardBody>\n              <div className=\"horizontal-align-center \">\n                <PieChart width={300} height={300}>\n                  <Pie data={props.chartData} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" fill=\"red\">\n                    {props.chartData.map((entry, index) => (\n                      <Cell key={index} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Pie>\n                  <Legend />\n                </PieChart>\n              </div>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n      <Modal\n        title=\"Add a total row\"\n        isVisible={props.modalVisible}\n        onCloseModal={props.closeModal}\n        onValidate={props.onSaveRow}\n      >\n        <div className=\"grid\">\n          <div className=\"col-6\">\n            <FieldSelect\n              name=\"counter\"\n              description=\"Counter\"\n              value={props.rowDetail.counter.id}\n              options={props.counterList}\n              helpText=\"Counter\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(error => error.field === \"date\")}\n            />\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport {\n  QUERY_DETAIL_TOTAL,\n  MUTATION_CREATE_TOTAL,\n  MUTATION_UPDATE_TOTAL,\n  QUERY_LIST_TOTAL,\n  MUTATION_CREATE_TOTAL_ROW,\n  MUTATION_UPDATE_TOTAL_ROW,\n  MUTATION_DELETE_TOTAL_ROW,\n  QUERY_LIST_COUNTER\n} from \"../../queries/index\";\nimport Page from \"../../components/Page/Page\";\nimport Detail from \"./Detail\";\n\nimport \"./Total.css\";\n\nclass Total extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: 0,\n      detail: { title: \"\", totalrowSet: [] },\n      errors: [],\n      rowDetail: { counter: { id: \"\", title: \"\" } },\n      rowErrors: [],\n      modalVisible: false\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.query.detailTotal) {\n      this.setState({ id: props.match.params.id });\n      this.setState({ detail: props.query.detailTotal });\n    }\n  }\n\n  onSave = () => this.save().then(response => this.errorOrRedirect(response));\n\n  onSaveRow = () => this.saveRow().then(response => this.errorOrCloseModal(response));\n\n  save = () => {\n    if (this.state.id) {\n      return this.props.update({\n        variables: { id: this.state.id, title: this.state.detail.title }\n      });\n    }\n    return this.props.create({ variables: { ...this.state.detail } });\n  };\n\n  saveRow = () => {\n    if (this.state.rowDetail.id) {\n      return this.props.updateRow({\n        variables: { ...this.state.rowDetail, total: this.state.id }\n      });\n    }\n    return this.props.createRow({\n      variables: { ...this.state.rowDetail, total: this.state.id }\n    });\n  };\n\n  error = response => this.setState({ errors: response.data.mutationTotal.errors });\n\n  errorRow = response => this.setState({ rowErrors: response.data.mutationTotalRow.errors });\n\n  resetRow = () =>\n    this.setState({\n      rowDetail: { counter: 0 },\n      rowErrors: []\n    });\n\n  errorOrRedirect = response => {\n    if (response.data.mutationTotal.errors.length > 0) {\n      return this.error(response);\n    }\n    return this.props.history.push(\"/total/\" + response.data.mutationTotal.total.id);\n  };\n\n  errorOrOpenModalOnAdd = response => {\n    if (response.data.mutationTotal.errors.length > 0) {\n      return this.error(response);\n    }\n    this.resetRow();\n    return this.openModal();\n  };\n\n  errorOrOpenModalOnEdit = (response, id) => {\n    if (response.data.mutationTotal.errors.length > 0) {\n      return this.error(response);\n    }\n\n    const detail = this.state.detail.totalrowSet.find(row => row.counter.id === id);\n\n    this.setState({ rowDetail: detail });\n\n    return this.openModal();\n  };\n\n  errorOrCloseModal = response => {\n    if (response.data.mutationTotalRow.errors.length > 0) {\n      this.errorRow(response);\n    }\n    this.resetRow();\n    return this.closeModal();\n  };\n\n  openModal = () => this.setState({ modalVisible: true });\n\n  closeModal = () => this.setState({ modalVisible: false });\n\n  clickAdd = () => this.save().then(response => this.errorOrOpenModalOnAdd(response));\n\n  onChange = e =>\n    this.setState({\n      detail: { ...this.state.detail, [e.target.name]: e.target.value }\n    });\n\n  onChangeRow = e =>\n    this.setState({\n      rowDetail: { ...this.state.rowDetail, [e.target.name]: e.target.value }\n    });\n\n  clickEdit = id => this.save().then(response => this.errorOrOpenModalOnEdit(response, id));\n\n  clickDelete = id => this.props.delete({ variables: { pk: id } });\n\n  buttonAddDisabled = () => this.state.id === 0;\n\n  adaptCounterList = () => {\n    let result = [];\n    this.props.queryListCounter.listCounter.map(counter => result.push({ value: counter.id, label: counter.title }));\n    return result;\n  };\n\n  adaptTotalRowList = () => {\n    let result = [];\n    this.state.detail.totalrowSet.map(totalRow => {\n      const amount = totalRow.counter.counterrowSet.reduce((sum, value) => sum + value.amount, 0);\n      result.push({ id: totalRow.id, title: totalRow.counter.title, amount });\n      return null;\n    });\n    return result;\n  };\n\n  chartData = () => {\n    let result = [];\n    this.state.detail.totalrowSet.map(totalRow => {\n      const amount = totalRow.counter.counterrowSet.reduce((sum, value) => sum + value.amount, 0);\n      result.push({ name: totalRow.counter.title, value: Math.abs(amount) });\n      return null;\n    });\n    return result;\n  };\n\n  render() {\n    let content;\n\n    if (this.props.query.loading || this.props.queryListCounter.loading) {\n      content = \"Loading...\";\n    } else {\n      content = (\n        <Detail\n          detail={this.state.detail}\n          onChange={this.onChange}\n          onSave={this.onSave}\n          errors={this.state.errors}\n          list={this.adaptTotalRowList()}\n          clickAdd={this.clickAdd}\n          closeModal={this.closeModal}\n          modalVisible={this.state.modalVisible}\n          rowDetail={this.state.rowDetail}\n          rowErrors={this.state.rowErrors}\n          onChangeRow={this.onChangeRow}\n          onSaveRow={this.onSaveRow}\n          clickEdit={this.clickEdit}\n          clickDelete={this.clickDelete}\n          buttonAddDisabled={this.buttonAddDisabled()}\n          counterList={this.adaptCounterList()}\n          chartData={this.chartData()}\n        />\n      );\n    }\n\n    return <Page title=\"Total\">{content}</Page>;\n  }\n}\n\nexport default compose(\n  graphql(QUERY_DETAIL_TOTAL, {\n    name: \"query\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      variables: { id: props.match.params.id },\n      fetchPolicy: \"network-only\"\n    })\n  }),\n  graphql(MUTATION_CREATE_TOTAL, {\n    name: \"create\",\n    options: { refetchQueries: [{ query: QUERY_LIST_TOTAL }] }\n  }),\n  graphql(MUTATION_UPDATE_TOTAL, {\n    name: \"update\",\n    options: { refetchQueries: [{ query: QUERY_LIST_TOTAL }] }\n  }),\n  graphql(MUTATION_CREATE_TOTAL_ROW, {\n    name: \"createRow\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_TOTAL,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(MUTATION_UPDATE_TOTAL_ROW, {\n    name: \"updateRow\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_TOTAL,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(MUTATION_DELETE_TOTAL_ROW, {\n    name: \"delete\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_TOTAL,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(QUERY_LIST_COUNTER, { name: \"queryListCounter\" })\n)(Total);\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport { PrivateRoute } from \"../../utils/ProvateRoute\";\nimport Demo from \"../Demo/Demo\";\nimport Login from \"../Login/Login\";\nimport Dashboard from \"../Dashboard/Dashboard\"\nimport Counters from \"../Counters/Counters\"\nimport Counter from \"../Counter/Counter\"\nimport Totals from \"../Totals/Totals\"\nimport Total from \"../Total/Total\"\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/demo\" component={Demo} />\n        <PrivateRoute exact path=\"/\" component={Dashboard} />\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n        <PrivateRoute exact path=\"/counters\" component={Counters} />\n        <PrivateRoute exact path=\"/counter\" component={Counter} />\n        <PrivateRoute exact path=\"/counter/:id\" component={Counter} />\n        <PrivateRoute exact path=\"/totals\" component={Totals} />\n        <PrivateRoute exact path=\"/total\" component={Total} />\n        <PrivateRoute exact path=\"/total/:id\" component={Total} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ApolloProvider } from \"react-apollo\";\n\nimport client from \"./store/client\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./index.css\"\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}