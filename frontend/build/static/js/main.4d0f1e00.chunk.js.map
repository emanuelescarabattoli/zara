{"version":3,"sources":["store/client.js","store/resolvers.js","utils/ProvateRoute.js","containers/Demo/Demo.js","containers/Login/Content.js","containers/Login/Login.js","components/TwoSections/TwoSections.js","components/Page/Page.js","containers/Dashboard/Dashboard.js","queries/index.js","components/Card/Card.js","components/Delete/Delete.js","components/ButtonPlus/ButtonPlus.js","containers/Counters/List.js","containers/Counters/Counters.js","utils/utils.js","components/FieldText/FieldText.js","components/Button/Button.js","components/Total/Total.js","components/Modal/Modal.js","containers/Counter/Detail.js","containers/Counter/Counter.js","containers/Totals/List.js","containers/Totals/Totals.js","components/FieldSelect/FieldSelect.js","containers/Total/Detail.js","containers/Total/Total.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["link","createHttpLink","uri","process","credentials","cache","InMemoryCache","client","ApolloClient","ApolloLink","from","withClientState","defaults","containers","__typename","dashboard","default","resolvers","Mutation","QUERY","gql","_templateObject","PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","react_apollo_browser_umd","query","_ref2","loading","error","data","Route","assign","render","props","me","userneme","Redirect","to","Counters","List","className","Login","document","location","href","Content","TwoSections","title","children","Page","Link","components_TwoSections_TwoSections","Dashboard","components_Page_Page","QUERY_LIST_COUNTER","queries_templateObject","MUTATION_DELETE_COUNTER","_templateObject2","QUERY_DETAIL_COUNTER","_templateObject3","MUTATION_CREATE_COUNTER","_templateObject4","MUTATION_UPDATE_COUNTER","_templateObject5","MUTATION_CREATE_COUNTER_ROW","_templateObject6","MUTATION_UPDATE_COUNTER_ROW","_templateObject7","MUTATION_DELETE_COUNTER_ROW","_templateObject8","QUERY_LIST_TOTAL","_templateObject9","MUTATION_DELETE_TOTAL","_templateObject10","QUERY_DETAIL_TOTAL","_templateObject11","MUTATION_CREATE_TOTAL","_templateObject12","MUTATION_UPDATE_TOTAL","_templateObject13","MUTATION_CREATE_TOTAL_ROW","_templateObject14","MUTATION_UPDATE_TOTAL_ROW","_templateObject15","MUTATION_DELETE_TOTAL_ROW","_templateObject16","Card","CardHeader","CardSection","CardBody","Delete","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","confirm","_this2","onClick","setState","Button","Card_Card","Card_CardHeader","width","list","map","item","key","id","components_Delete_Delete","onDelete","ButtonPlus","delete","variables","pk","content","Counters_List","listCounter","compose","graphql","name","options","notifyOnNetworkStatusChange","refetchQueries","formatNumber","number","toLocaleString","minimumFractionDigits","maximumFractionDigits","FieldText","htmlFor","description","type","value","onChange","placeholder","helpText","messages","join","disabled","Total","length","column","reduce","total","Modal","isVisible","onCloseModal","components_Button_Button","onValidate","Detail","onSave","Card_CardBody","components_FieldText_FieldText","detail","errors","find","field","Card_CardSection","buttonAddDisabled","clickAdd","clickEdit","date","period","amount","clickDelete","colSpan","components_Total_Total","components_Modal_Modal","modalVisible","closeModal","onSaveRow","rowDetail","onChangeRow","rowErrors","Counter","save","then","response","errorOrRedirect","saveRow","errorOrCloseModal","update","create","objectSpread","updateRow","counter","createRow","mutationCounter","errorRow","mutationCounterRow","resetRow","history","push","errorOrOpenModalOnAdd","openModal","errorOrOpenModalOnEdit","counterrowSet","row","e","defineProperty","target","detailCounter","match","params","Counter_Detail","fetchPolicy","Totals","Totals_List","listTotal","FieldSelect","option","label","components_FieldSelect_FieldSelect","counterList","mutationTotal","mutationTotalRow","totalrowSet","adaptCounterList","result","queryListCounter","adaptTotalRowList","totalRow","sum","detailTotal","Total_Detail","App","Fragment","exact","path","Demo","ProvateRoute_PrivateRoute","Boolean","window","hostname","ReactDOM","BrowserRouter","containers_App_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8ZAQMA,EAAOC,YAAe,CAC1BC,IAAKC,4CACLC,YAAa,YAGTC,EAAQ,IAAIC,IAcHC,EAZA,IAAIC,IAAa,CAC9BH,QACAL,KAAMS,IAAWC,KAAK,CACpBC,YAAgB,CACdC,SCfkB,CACtBC,WAAY,CACVC,WAAY,aACZC,UAAW,CACTD,WAAY,YACZE,QAAS,QDWTC,UCpBmB,CACvBC,SAAU,IDoBNb,UAEFL,+MElBJ,IAAMmB,EAAQC,IAAHC,KAQEC,EAAe,SAAAC,GAAA,IAAcC,EAAdD,EAAGE,UAAyBC,EAA5BC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,sBAC1BM,EAAAC,EAAAC,cAACC,EAAA,MAAD,CAAOC,MAAOd,GACX,SAAAe,GAA8B,IAA3BC,EAA2BD,EAA3BC,QAASC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,KAClB,OAAIF,EAAgBN,EAAAC,EAAAC,cAAA,YAElBF,EAAAC,EAAAC,cAACO,EAAA,EAADX,OAAAY,OAAA,GACMb,EADN,CAEEc,OAAQ,SAAAC,GACN,OAAIL,GAASC,EAAKK,GAAGC,SACZd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAUC,GAAG,UAEfhB,EAAAC,EAAAC,cAACP,EAAciB,UCZnBK,0LANX,OACEjB,EAAAC,EAAAC,cAAA,mBAHiBP,cCMRuB,EARF,WACX,OACElB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,kBACbnB,EAAAC,EAAAC,cAAA,gCCWSkB,qMARXC,SAASC,SAASC,KAAO,mDAIzB,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,aANS7B,uBCSL8B,EAbY,SAAAb,GACzB,OACEZ,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,gCACbnB,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,mBAAmBP,EAAMc,QAEzC1B,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,qBACZP,EAAMe,YC2CAC,EAhDF,SAAAhB,GAAK,OAChBZ,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,WACbnB,EAAAC,EAAAC,cAAA,QAAMiB,UAAU,QACdnB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,0BADf,QAIAnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,gBACbnB,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMV,UAAU,sBAAsBH,GAAG,YACvChB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,2BADf,gBAKFnB,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,QACZnB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMb,GAAG,cACPhB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,iCADf,cAKFnB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMb,GAAG,aACPhB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,2BADf,aAKFnB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMb,GAAG,WACPhB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,4BADf,aAONnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,WACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,SACbnB,EAAAC,EAAAC,cAAC4B,EAAD,CAAaJ,MAAOd,EAAMc,OACxB1B,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,SAASI,KAAK,oBACzBvB,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,oCADf,YAMJnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QAAQP,EAAMe,aCnCpBI,0LAJX,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,CAAMN,MAAM,qBAFC/B,ooICJjB,IAAMsC,GAAqB1C,IAAH2C,KASlBC,GAA0B5C,IAAH6C,KAQvBC,GAAuB9C,IAAH+C,KAgBpBC,GAA0BhD,IAAHiD,KAcvBC,GAA0BlD,IAAHmD,KAcvBC,GAA8BpD,IAAHqD,KAe3BC,GAA8BtD,IAAHuD,KAsB3BC,GAA8BxD,IAAHyD,KAQ3BC,GAAmB1D,IAAH2D,KAShBC,GAAwB5D,IAAH6D,KAQrBC,GAAqB9D,IAAH+D,KAmBlBC,GAAwBhE,IAAHiE,KAcrBC,GAAwBlE,IAAHmE,KAcrBC,GAA4BpE,IAAHqE,KAazBC,GAA4BtE,IAAHuE,KAazBC,GAA4BxE,IAAHyE,KCpMzBC,GAAO,SAAArD,GAClB,OAAOZ,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QAAQP,EAAMe,WAGzBuC,GAAa,SAAAtD,GACxB,OAAOZ,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,eAAeP,EAAMe,WAGhCwC,GAAc,SAAAvD,GACzB,OAAOZ,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,gBAAgBP,EAAMe,WAGjCyC,GAAW,SAAAxD,GACtB,OAAOZ,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,aAAaP,EAAMe,WC0B5B0C,eAtCb,SAAAA,EAAYzD,GAAO,IAAA0D,EAAA,OAAAxE,OAAAyE,EAAA,EAAAzE,CAAA0E,KAAAH,IACjBC,EAAAxE,OAAA2E,EAAA,EAAA3E,CAAA0E,KAAA1E,OAAA4E,EAAA,EAAA5E,CAAAuE,GAAAM,KAAAH,KAAM5D,KAEDgE,MAAQ,CACXC,SAAS,GAJMP,wEAQV,IAAAQ,EAAAN,KACP,OACExE,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,UACXqD,KAAKI,MAAMC,QAMT,KALF7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQiB,UAAU,kBAAkB4D,QAAS,kBAAMD,EAAKE,SAAS,CAAEH,SAAS,MAC1E7E,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,kBAIlBqD,KAAKI,MAAMC,QACV7E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEiB,UAAU,oBACV4D,QAAS,WACP,OAAOD,EAAKlE,MAAMmE,YAGpB/E,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,iBAEfnB,EAAAC,EAAAC,cAAA,UAAQiB,UAAU,kBAAkB4D,QAAS,kBAAMD,EAAKE,SAAS,CAAEH,SAAS,MAC1E7E,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,kBAGf,aAjCSxB,aCKNsF,GAJA,SAAArE,GACb,OAAOZ,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMV,UAAU,qBAAqBH,GAAIJ,EAAMzC,MAAM6B,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,kBCyC5DD,GArCF,SAAAN,GACX,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgF,GAAD,KACElF,EAAAC,EAAAC,cAACiF,GAAD,KACEnF,EAAAC,EAAAC,cAAC4B,EAAD,CAAaJ,MAAM,mBAErB1B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkF,MAAM,MAAV,MACApF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,MAAIkF,MAAM,UAGdpF,EAAAC,EAAAC,cAAA,aACGU,EAAMyE,KAAKC,IAAI,SAAAC,GACd,OACEvF,EAAAC,EAAAC,cAAA,MAAIsF,IAAKD,EAAKE,IACZzF,EAAAC,EAAAC,cAAA,UAAKqF,EAAKE,IACVzF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMb,GAAI,YAAcuE,EAAKE,IAAKF,EAAK7D,QAEzC1B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwF,GAAD,CAAQX,QAAS,kBAAMnE,EAAM+E,SAASJ,EAAKE,cAQzDzF,EAAAC,EAAAC,cAAC0F,GAAD,CAAYzH,KAAK,eC5BjB8C,qNACJ0E,SAAW,SAAAF,GACTnB,EAAK1D,MAAMiF,OAAO,CAAEC,UAAW,CAAEC,GAAIN,8EAIrC,IAAIO,EAUJ,OAPEA,EADExB,KAAK5D,MAAMR,MAAME,QACT,aAGRN,EAAAC,EAAAC,cAAC+F,GAAD,CAAMZ,KAAMb,KAAK5D,MAAMR,MAAM8F,YAAaP,SAAUnB,KAAKmB,WAItD3F,EAAAC,EAAAC,cAAC8B,EAAD,CAAMN,MAAM,YAAYsE,UAhBZrG,cAoBRwG,qBACbC,kBAAQnE,GAAoB,CAC1BoE,KAAM,QACNC,QAAS,CAAEC,6BAA6B,KAE1CH,kBAAQjE,GAAyB,CAC/BkE,KAAM,SACNC,QAAS,CAAEE,eAAgB,CAAC,CAAEpG,MAAO6B,QAP1BkE,CASblF,sBCzCWwF,GAAe,SAAAC,GAAM,OAChCA,EAASA,EAAOC,eAAe,KAAM,CAAEC,sBAAuB,EAAGC,sBAAuB,IAAO,QCiBlFC,GAhBG,SAAAlG,GAChB,OACEZ,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACbnB,EAAAC,EAAAC,cAAA,SAAO6G,QAASnG,EAAMyF,MAAOzF,EAAMoG,aACnChH,EAAAC,EAAAC,cAAA,SACEmG,KAAMzF,EAAMyF,KACZY,KAAMrG,EAAMqG,KAAOrG,EAAMqG,KAAO,OAChCC,MAAOtG,EAAMsG,MACbC,SAAUvG,EAAMuG,SAChBC,YAAaxG,EAAMyG,WAErBrH,EAAAC,EAAAC,cAAA,aAAQU,EAAML,OAASK,EAAML,MAAM+G,SAASC,KAAK,SCPxCtC,GAJA,SAAArE,GACb,OAAOZ,EAAAC,EAAAC,cAAA,UAAQsH,SAAU5G,EAAM4G,SAAUrG,UAAU,SAAS4D,QAASnE,EAAMmE,SAAUnE,EAAMe,WCkB9E8F,GAjBD,SAAA7G,GACZ,OACEZ,EAAAC,EAAAC,cAAA,QAAMiB,UAAU,SACS,IAAtBP,EAAMyE,KAAKqC,OACRjB,GAAa,GACS,IAAtB7F,EAAMyE,KAAKqC,OACXjB,GAAa7F,EAAMyE,KAAK,GAAGzE,EAAM+G,SACjClB,GACE7F,EAAMyE,KAAKuC,OAAO,SAACC,EAAOtC,GAAR,OAChBsC,EAAMjH,EAAM+G,QAAUE,EAAMjH,EAAM+G,QAAUpC,EAAK3E,EAAM+G,QAAUE,EAAQtC,EAAK3E,EAAM+G,WAErF,IATT,WCeWG,GAhBD,SAAAlH,GACZ,OACEZ,EAAAC,EAAAC,cAAA,OAAKiB,UAAWP,EAAMmH,UAAY,QAAU,gBAC1C/H,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC4B,EAAD,CAAaJ,MAAOd,EAAMc,OACxB1B,EAAAC,EAAAC,cAAA,QAAMiB,UAAU,UAAU4D,QAASnE,EAAMoH,cACvChI,EAAAC,EAAAC,cAAA,KAAGiB,UAAU,mBAGjBnB,EAAAC,EAAAC,cAAA,WAAMU,EAAMe,UACZ3B,EAAAC,EAAAC,cAAC+H,GAAD,CAAQlD,QAASnE,EAAMsH,YAAvB,WCiIOC,GAhIA,SAAAvH,GACb,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgF,GAAD,KACElF,EAAAC,EAAAC,cAACiF,GAAD,KACEnF,EAAAC,EAAAC,cAAC4B,EAAD,CAAaJ,MAAM,kBACjB1B,EAAAC,EAAAC,cAAC+H,GAAD,CAAQlD,QAASnE,EAAMwH,QAAvB,UAGJpI,EAAAC,EAAAC,cAACmI,GAAD,KACErI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoI,GAAD,CACEjC,KAAK,QACLW,YAAY,QACZE,MAAOtG,EAAM2H,OAAO7G,MACpB2F,SAAS,kBACTF,SAAUvG,EAAMuG,SAChB5G,MAAOK,EAAM4H,OAAOC,KAAK,SAAAlI,GAAK,MAAoB,UAAhBA,EAAMmI,YAI9C1I,EAAAC,EAAAC,cAACyI,GAAD,KACE3I,EAAAC,EAAAC,cAAC4B,EAAD,CAAaJ,MAAM,QACjB1B,EAAAC,EAAAC,cAAC+H,GAAD,CAAQT,SAAU5G,EAAMgI,kBAAmB7D,QAASnE,EAAMiI,UAA1D,SAKJ7I,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkF,MAAM,MAAV,MACApF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,eAAd,UACAnB,EAAAC,EAAAC,cAAA,MAAIkF,MAAM,UAGdpF,EAAAC,EAAAC,cAAA,aACGU,EAAMyE,MACLzE,EAAMyE,KAAKC,IAAI,SAAAC,GACb,OACEvF,EAAAC,EAAAC,cAAA,MAAIsF,IAAKD,EAAKE,IACZzF,EAAAC,EAAAC,cAAA,UAAKqF,EAAKE,IACVzF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQ6E,QAAS,kBAAMnE,EAAMkI,UAAUvD,EAAKE,MACzCF,EAAKyB,cAGVhH,EAAAC,EAAAC,cAAA,UAAKqF,EAAKwD,MACV/I,EAAAC,EAAAC,cAAA,UAAKqF,EAAKyD,QACVhJ,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,eACXsF,GAAalB,EAAK0D,QADrB,WAGAjJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwF,GAAD,CAAQX,QAAS,kBAAMnE,EAAMsI,YAAY3D,EAAKE,YAM1DzF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIiJ,QAAS,EAAGhI,UAAU,eACxBnB,EAAAC,EAAAC,cAACkJ,GAAD,CAAO/D,KAAMzE,EAAMyE,MAAQ,GAAIsC,OAAO,YAExC3H,EAAAC,EAAAC,cAAA,MAAIiJ,QAAS,QAKrBnJ,EAAAC,EAAAC,cAACmJ,GAAD,CACE3H,MAAM,oBACNqG,UAAWnH,EAAM0I,aACjBtB,aAAcpH,EAAM2I,WACpBrB,WAAYtH,EAAM4I,WAElBxJ,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,SACbnB,EAAAC,EAAAC,cAACoI,GAAD,CACErB,KAAK,OACLZ,KAAK,OACLW,YAAY,OACZE,MAAOtG,EAAM6I,UAAUV,KACvB1B,SAAS,sBACTF,SAAUvG,EAAM8I,YAChBnJ,MAAOK,EAAM+I,UAAUlB,KAAK,SAAAlI,GAAK,MAAoB,SAAhBA,EAAMmI,WAG/C1I,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,SACbnB,EAAAC,EAAAC,cAACoI,GAAD,CACEjC,KAAK,cACLW,YAAY,cACZE,MAAOtG,EAAM6I,UAAUzC,YACvBK,SAAS,6BACTF,SAAUvG,EAAM8I,YAChBnJ,MAAOK,EAAM+I,UAAUlB,KACrB,SAAAlI,GAAK,MAAoB,gBAAhBA,EAAMmI,WAIrB1I,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,SACbnB,EAAAC,EAAAC,cAACoI,GAAD,CACEjC,KAAK,SACLW,YAAY,SACZE,MAAOtG,EAAM6I,UAAUT,OACvB3B,SAAS,wBACTF,SAAUvG,EAAM8I,YAChBnJ,MAAOK,EAAM+I,UAAUlB,KAAK,SAAAlI,GAAK,MAAoB,WAAhBA,EAAMmI,WAG/C1I,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,SACbnB,EAAAC,EAAAC,cAACoI,GAAD,CACEjC,KAAK,SACLW,YAAY,SACZE,MAAOtG,EAAM6I,UAAUR,OACvB5B,SAAS,wBACTF,SAAUvG,EAAM8I,YAChBnJ,MAAOK,EAAM+I,UAAUlB,KAAK,SAAAlI,GAAK,MAAoB,WAAhBA,EAAMmI,eCtHnDkB,sBACJ,SAAAA,EAAYhJ,GAAO,IAAA0D,EAAA,OAAAxE,OAAAyE,EAAA,EAAAzE,CAAA0E,KAAAoF,IACjBtF,EAAAxE,OAAA2E,EAAA,EAAA3E,CAAA0E,KAAA1E,OAAA4E,EAAA,EAAA5E,CAAA8J,GAAAjF,KAAAH,KAAM5D,KAmBRwH,OAAS,kBAAM9D,EAAKuF,OAAOC,KAAK,SAAAC,GAAQ,OAAIzF,EAAK0F,gBAAgBD,MApB9CzF,EAsBnBkF,UAAY,kBAAMlF,EAAK2F,UAAUH,KAAK,SAAAC,GAAQ,OAAIzF,EAAK4F,kBAAkBH,MAtBtDzF,EAwBnBuF,KAAO,WACL,OAAIvF,EAAKM,MAAMa,GACNnB,EAAK1D,MAAMuJ,OAAO,CACvBrE,UAAW,CAAEL,GAAInB,EAAKM,MAAMa,GAAI/D,MAAO4C,EAAKM,MAAM2D,OAAO7G,SAGtD4C,EAAK1D,MAAMwJ,OAAO,CAAEtE,UAAUhG,OAAAuK,GAAA,EAAAvK,CAAA,GAAMwE,EAAKM,MAAM2D,WA9BrCjE,EAiCnB2F,QAAU,WACR,OAAI3F,EAAKM,MAAM6E,UAAUhE,GAChBnB,EAAK1D,MAAM0J,UAAU,CAC1BxE,UAAUhG,OAAAuK,GAAA,EAAAvK,CAAA,GAAMwE,EAAKM,MAAM6E,UAAlB,CAA6Bc,QAASjG,EAAKM,MAAMa,OAGvDnB,EAAK1D,MAAM4J,UAAU,CAC1B1E,UAAUhG,OAAAuK,GAAA,EAAAvK,CAAA,GAAMwE,EAAKM,MAAM6E,UAAlB,CAA6Bc,QAASjG,EAAKM,MAAMa,QAxC3CnB,EA4CnB/D,MAAQ,SAAAwJ,GAAQ,OAAIzF,EAAKU,SAAS,CAAEwD,OAAQuB,EAASvJ,KAAKiK,gBAAgBjC,UA5CvDlE,EA8CnBoG,SAAW,SAAAX,GAAQ,OAAIzF,EAAKU,SAAS,CAAE2E,UAAWI,EAASvJ,KAAKmK,mBAAmBnC,UA9ChElE,EAgDnBsG,SAAW,kBACTtG,EAAKU,SAAS,CACZyE,UAAW,CAAEzC,YAAa,GAAI+B,KAAM,GAAIC,OAAQ,GAAIC,OAAQ,IAC5DU,UAAW,MAnDIrF,EAsDnB0F,gBAAkB,SAAAD,GAChB,OAAIA,EAASvJ,KAAKiK,gBAAgBjC,OAAOd,OAAS,EACzCpD,EAAK/D,MAAMwJ,GAEbzF,EAAK1D,MAAMiK,QAAQC,KAAK,YAAcf,EAASvJ,KAAKiK,gBAAgBF,QAAQ9E,KA1DlEnB,EA6DnByG,sBAAwB,SAAAhB,GACtB,OAAIA,EAASvJ,KAAKiK,gBAAgBjC,OAAOd,OAAS,EACzCpD,EAAK/D,MAAMwJ,IAEpBzF,EAAKsG,WACEtG,EAAK0G,cAlEK1G,EAqEnB2G,uBAAyB,SAAClB,EAAUtE,GAClC,GAAIsE,EAASvJ,KAAKiK,gBAAgBjC,OAAOd,OAAS,EAChD,OAAOpD,EAAK/D,MAAMwJ,GAGpB,IAAMxB,EAASjE,EAAKM,MAAM2D,OAAO2C,cAAczC,KAAK,SAAA0C,GAAG,OAAIA,EAAI1F,KAAOA,IAItE,OAFAnB,EAAKU,SAAS,CAAEyE,UAAWlB,IAEpBjE,EAAK0G,aA9EK1G,EAiFnB4F,kBAAoB,SAAAH,GAKlB,OAJIA,EAASvJ,KAAKmK,mBAAmBnC,OAAOd,OAAS,GACnDpD,EAAKoG,SAASX,GAEhBzF,EAAKsG,WACEtG,EAAKiF,cAtFKjF,EAyFnB0G,UAAY,kBAAM1G,EAAKU,SAAS,CAAEsE,cAAc,KAzF7BhF,EA2FnBiF,WAAa,kBAAMjF,EAAKU,SAAS,CAAEsE,cAAc,KA3F9BhF,EA6FnBuE,SAAW,kBAAMvE,EAAKuF,OAAOC,KAAK,SAAAC,GAAQ,OAAIzF,EAAKyG,sBAAsBhB,MA7FtDzF,EA+FnB6C,SAAW,SAAAiE,GAAC,OACV9G,EAAKU,SAAS,CACZuD,OAAOzI,OAAAuK,GAAA,EAAAvK,CAAA,GAAMwE,EAAKM,MAAM2D,OAAlBzI,OAAAuL,GAAA,EAAAvL,CAAA,GAA2BsL,EAAEE,OAAOjF,KAAO+E,EAAEE,OAAOpE,WAjG3C5C,EAoGnBoF,YAAc,SAAA0B,GAAC,OACb9G,EAAKU,SAAS,CACZyE,UAAU3J,OAAAuK,GAAA,EAAAvK,CAAA,GAAMwE,EAAKM,MAAM6E,UAAlB3J,OAAAuL,GAAA,EAAAvL,CAAA,GAA8BsL,EAAEE,OAAOjF,KAAO+E,EAAEE,OAAOpE,WAtGjD5C,EAyGnBwE,UAAY,SAAArD,GAAE,OAAInB,EAAKuF,OAAOC,KAAK,SAAAC,GAAQ,OAAIzF,EAAK2G,uBAAuBlB,EAAUtE,MAzGlEnB,EA2GnB4E,YAAc,SAAAzD,GAAE,OAAInB,EAAK1D,MAAMiF,OAAO,CAAEC,UAAW,CAAEC,GAAIN,MA3GtCnB,EA6GnBsE,kBAAoB,kBAAwB,IAAlBtE,EAAKM,MAAMa,IA1GnCnB,EAAKM,MAAQ,CACXa,GAAI,EACJ8C,OAAQ,CAAE7G,MAAO,IACjB8G,OAAQ,GACRiB,UAAW,CAAEzC,YAAa,GAAI+B,KAAM,GAAIC,OAAQ,GAAIC,OAAQ,IAC5DU,UAAW,GACXL,cAAc,GATChF,yFAaO1D,GACpBA,EAAMR,MAAMmL,gBACd/G,KAAKQ,SAAS,CAAES,GAAI7E,EAAM4K,MAAMC,OAAOhG,KACvCjB,KAAKQ,SAAS,CAAEuD,OAAQ3H,EAAMR,MAAMmL,kDAgGtC,IAAIvF,EA0BJ,OAvBEA,EADExB,KAAK5D,MAAMR,MAAME,QACT,aAGRN,EAAAC,EAAAC,cAACwL,GAAD,CACEnD,OAAQ/D,KAAKI,MAAM2D,OACnBpB,SAAU3C,KAAK2C,SACfiB,OAAQ5D,KAAK4D,OACbI,OAAQhE,KAAKI,MAAM4D,OACnBnD,KAAMb,KAAKI,MAAM2D,OAAO2C,cACxBrC,SAAUrE,KAAKqE,SACfU,WAAY/E,KAAK+E,WACjBD,aAAc9E,KAAKI,MAAM0E,aACzBG,UAAWjF,KAAKI,MAAM6E,UACtBE,UAAWnF,KAAKI,MAAM+E,UACtBD,YAAalF,KAAKkF,YAClBF,UAAWhF,KAAKgF,UAChBV,UAAWtE,KAAKsE,UAChBI,YAAa1E,KAAK0E,YAClBN,kBAAmBpE,KAAKoE,sBAKvB5I,EAAAC,EAAAC,cAAC8B,EAAD,CAAMN,MAAM,WAAWsE,UA3IZrG,cA+IPwG,qBACbC,kBAAQ/D,GAAsB,CAC5BgE,KAAM,QACNC,QAAS,SAAA1F,GAAK,MAAK,CACjB2F,6BAA6B,EAC7BT,UAAW,CAAEL,GAAI7E,EAAM4K,MAAMC,OAAOhG,IACpCkG,YAAa,mBAGjBvF,kBAAQ7D,GAAyB,CAC/B8D,KAAM,SACNC,QAAS,CAAEE,eAAgB,CAAC,CAAEpG,MAAO6B,QAEvCmE,kBAAQ3D,GAAyB,CAC/B4D,KAAM,SACNC,QAAS,CAAEE,eAAgB,CAAC,CAAEpG,MAAO6B,QAEvCmE,kBAAQzD,GAA6B,CACnC0D,KAAM,YACNC,QAAS,SAAA1F,GAAK,MAAK,CACjB2F,6BAA6B,EAC7BC,eAAgB,CACd,CACEpG,MAAOiC,GACPyD,UAAW,CAAEL,GAAI7E,EAAM4K,MAAMC,OAAOhG,UAK5CW,kBAAQvD,GAA6B,CACnCwD,KAAM,YACNC,QAAS,SAAA1F,GAAK,MAAK,CACjB2F,6BAA6B,EAC7BC,eAAgB,CACd,CACEpG,MAAOiC,GACPyD,UAAW,CAAEL,GAAI7E,EAAM4K,MAAMC,OAAOhG,UAK5CW,kBAAQrD,GAA6B,CACnCsD,KAAM,SACNC,QAAS,SAAA1F,GAAK,MAAK,CACjB2F,6BAA6B,EAC7BC,eAAgB,CACd,CACEpG,MAAOiC,GACPyD,UAAW,CAAEL,GAAI7E,EAAM4K,MAAMC,OAAOhG,UAhD/BU,CAqDbyD,ICxKa1I,GArCF,SAAAN,GACX,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgF,GAAD,KACElF,EAAAC,EAAAC,cAACiF,GAAD,KACEnF,EAAAC,EAAAC,cAAC4B,EAAD,CAAaJ,MAAM,iBAErB1B,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkF,MAAM,MAAV,MACApF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,MAAIkF,MAAM,UAGdpF,EAAAC,EAAAC,cAAA,aACGU,EAAMyE,KAAKC,IAAI,SAAAC,GACd,OACEvF,EAAAC,EAAAC,cAAA,MAAIsF,IAAKD,EAAKE,IACZzF,EAAAC,EAAAC,cAAA,UAAKqF,EAAKE,IACVzF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAMb,GAAI,UAAYuE,EAAKE,IAAKF,EAAK7D,QAEvC1B,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwF,GAAD,CAAQX,QAAS,kBAAMnE,EAAM+E,SAASJ,EAAKE,cAQzDzF,EAAAC,EAAAC,cAAC0F,GAAD,CAAYzH,KAAK,aC/BjByN,qNACJjG,SAAW,SAAAF,GACTnB,EAAK1D,MAAMiF,OAAO,CAAEC,UAAW,CAAEC,GAAIN,8EAIrC,IAAIO,EAQJ,OALEA,EADExB,KAAK5D,MAAMR,MAAME,QACT,aAEAN,EAAAC,EAAAC,cAAC2L,GAAD,CAAMxG,KAAMb,KAAK5D,MAAMR,MAAM0L,UAAWnG,SAAUnB,KAAKmB,WAG5D3F,EAAAC,EAAAC,cAAC8B,EAAD,CAAMN,MAAM,UAAUsE,UAdZrG,cAkBNwG,qBACbC,kBAAQnD,GAAkB,CACxBoD,KAAM,QACNC,QAAS,CAAEC,6BAA6B,KAE1CH,kBAAQjD,GAAuB,CAC7BkD,KAAM,SACNC,QAAS,CAAEE,eAAgB,CAAC,CAAEpG,MAAO6C,QAP1BkD,CASbyF,ICpBaG,GAdK,SAAAnL,GAClB,OACEZ,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,cACbnB,EAAAC,EAAAC,cAAA,SAAO6G,QAASnG,EAAMyF,MAAOzF,EAAMoG,aACnChH,EAAAC,EAAAC,cAAA,UAAQmG,KAAMzF,EAAMyF,KAAMa,MAAOtG,EAAMsG,MAAOC,SAAUvG,EAAMuG,UAC3DvG,EAAM0F,QAAQhB,IAAI,SAAA0G,GAAM,OACvBhM,EAAAC,EAAAC,cAAA,UAAQgH,MAAO8E,EAAO9E,OAAQ8E,EAAOC,UAGzCjM,EAAAC,EAAAC,cAAA,aAAQU,EAAML,OAASK,EAAML,MAAM+G,SAASC,KAAK,SCkGxCY,GA5FA,SAAAvH,GACb,OACEZ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgF,GAAD,KACElF,EAAAC,EAAAC,cAACiF,GAAD,KACEnF,EAAAC,EAAAC,cAAC4B,EAAD,CAAaJ,MAAM,gBACjB1B,EAAAC,EAAAC,cAAC+H,GAAD,CAAQlD,QAASnE,EAAMwH,QAAvB,UAGJpI,EAAAC,EAAAC,cAACmI,GAAD,KACErI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoI,GAAD,CACEjC,KAAK,QACLW,YAAY,QACZE,MAAOtG,EAAM2H,OAAO7G,MACpB2F,SAAS,iBACTF,SAAUvG,EAAMuG,SAChB5G,MAAOK,EAAM4H,OAAOC,KAAK,SAAAlI,GAAK,MAAoB,UAAhBA,EAAMmI,YAI9C1I,EAAAC,EAAAC,cAACyI,GAAD,KACE3I,EAAAC,EAAAC,cAAC4B,EAAD,CAAaJ,MAAM,QACjB1B,EAAAC,EAAAC,cAAC+H,GAAD,CAAQT,SAAU5G,EAAMgI,kBAAmB7D,QAASnE,EAAMiI,UAA1D,SAKJ7I,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkF,MAAM,MAAV,MACApF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,eAAd,UACAnB,EAAAC,EAAAC,cAAA,MAAIkF,MAAM,UAGdpF,EAAAC,EAAAC,cAAA,aACGU,EAAMyE,MACLzE,EAAMyE,KAAKC,IAAI,SAAAC,GACb,OACEvF,EAAAC,EAAAC,cAAA,MAAIsF,IAAKD,EAAKE,IACZzF,EAAAC,EAAAC,cAAA,UAAKqF,EAAKE,IACVzF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQ6E,QAAS,kBAAMnE,EAAMkI,UAAUvD,EAAKE,MACzCF,EAAKgF,QAAQ7I,QAGlB1B,EAAAC,EAAAC,cAAA,MAAIiB,UAAU,eACXsF,GAAalB,EAAK0D,QADrB,WAGAjJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACwF,GAAD,CAAQX,QAAS,kBAAMnE,EAAMsI,YAAY3D,EAAKE,YAM1DzF,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIiJ,QAAS,EAAGhI,UAAU,eACxBnB,EAAAC,EAAAC,cAACkJ,GAAD,CAAO/D,KAAMzE,EAAMyE,MAAQ,GAAIsC,OAAO,YAExC3H,EAAAC,EAAAC,cAAA,MAAIiJ,QAAS,QAKrBnJ,EAAAC,EAAAC,cAACmJ,GAAD,CACE3H,MAAM,kBACNqG,UAAWnH,EAAM0I,aACjBtB,aAAcpH,EAAM2I,WACpBrB,WAAYtH,EAAM4I,WAElBxJ,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,QACbnB,EAAAC,EAAAC,cAAA,OAAKiB,UAAU,SACbnB,EAAAC,EAAAC,cAACgM,GAAD,CACE7F,KAAK,UACLW,YAAY,UACZE,MAAOtG,EAAM6I,UAAUc,QACvBjE,QAAS1F,EAAMuL,YACf9E,SAAS,UACTF,SAAUvG,EAAM8I,YAChBnJ,MAAOK,EAAM+I,UAAUlB,KAAK,SAAAlI,GAAK,MAAoB,SAAhBA,EAAMmI,eClFnDjB,sBACJ,SAAAA,EAAY7G,GAAO,IAAA0D,EAAA,OAAAxE,OAAAyE,EAAA,EAAAzE,CAAA0E,KAAAiD,IACjBnD,EAAAxE,OAAA2E,EAAA,EAAA3E,CAAA0E,KAAA1E,OAAA4E,EAAA,EAAA5E,CAAA2H,GAAA9C,KAAAH,KAAM5D,KAmBRwH,OAAS,kBAAM9D,EAAKuF,OAAOC,KAAK,SAAAC,GAAQ,OAAIzF,EAAK0F,gBAAgBD,MApB9CzF,EAsBnBkF,UAAY,kBAAMlF,EAAK2F,UAAUH,KAAK,SAAAC,GAAQ,OAAIzF,EAAK4F,kBAAkBH,MAtBtDzF,EAwBnBuF,KAAO,WACL,OAAIvF,EAAKM,MAAMa,GACNnB,EAAK1D,MAAMuJ,OAAO,CACvBrE,UAAW,CAAEL,GAAInB,EAAKM,MAAMa,GAAI/D,MAAO4C,EAAKM,MAAM2D,OAAO7G,SAGtD4C,EAAK1D,MAAMwJ,OAAO,CAAEtE,UAAUhG,OAAAuK,GAAA,EAAAvK,CAAA,GAAMwE,EAAKM,MAAM2D,WA9BrCjE,EAiCnB2F,QAAU,WACR,OAAI3F,EAAKM,MAAM6E,UAAUhE,GAChBnB,EAAK1D,MAAM0J,UAAU,CAC1BxE,UAAUhG,OAAAuK,GAAA,EAAAvK,CAAA,GAAMwE,EAAKM,MAAM6E,UAAlB,CAA6B5B,MAAOvD,EAAKM,MAAMa,OAGrDnB,EAAK1D,MAAM4J,UAAU,CAC1B1E,UAAUhG,OAAAuK,GAAA,EAAAvK,CAAA,GAAMwE,EAAKM,MAAM6E,UAAlB,CAA6B5B,MAAOvD,EAAKM,MAAMa,QAxCzCnB,EA4CnB/D,MAAQ,SAAAwJ,GAAQ,OAAIzF,EAAKU,SAAS,CAAEwD,OAAQuB,EAASvJ,KAAK4L,cAAc5D,UA5CrDlE,EA8CnBoG,SAAW,SAAAX,GAAQ,OAAIzF,EAAKU,SAAS,CAAE2E,UAAWI,EAASvJ,KAAK6L,iBAAiB7D,UA9C9DlE,EAgDnBsG,SAAW,kBACTtG,EAAKU,SAAS,CACZyE,UAAW,CAAEc,QAAS,GACtBZ,UAAW,MAnDIrF,EAsDnB0F,gBAAkB,SAAAD,GAChB,OAAIA,EAASvJ,KAAK4L,cAAc5D,OAAOd,OAAS,EACvCpD,EAAK/D,MAAMwJ,GAEbzF,EAAK1D,MAAMiK,QAAQC,KAAK,UAAYf,EAASvJ,KAAK4L,cAAcvE,MAAMpC,KA1D5DnB,EA6DnByG,sBAAwB,SAAAhB,GACtB,OAAIA,EAASvJ,KAAK4L,cAAc5D,OAAOd,OAAS,EACvCpD,EAAK/D,MAAMwJ,IAEpBzF,EAAKsG,WACEtG,EAAK0G,cAlEK1G,EAqEnB2G,uBAAyB,SAAClB,EAAUtE,GAClC,GAAIsE,EAASvJ,KAAK4L,cAAc5D,OAAOd,OAAS,EAC9C,OAAOpD,EAAK/D,MAAMwJ,GAGpB,IAAMxB,EAASjE,EAAKM,MAAM2D,OAAO+D,YAAY7D,KAAK,SAAA0C,GAAG,OAAIA,EAAI1F,KAAOA,IAIpE,OAFAnB,EAAKU,SAAS,CAAEyE,UAAWlB,IAEpBjE,EAAK0G,aA9EK1G,EAiFnB4F,kBAAoB,SAAAH,GAKlB,OAJIA,EAASvJ,KAAK6L,iBAAiB7D,OAAOd,OAAS,GACjDpD,EAAKoG,SAASX,GAEhBzF,EAAKsG,WACEtG,EAAKiF,cAtFKjF,EAyFnB0G,UAAY,kBAAM1G,EAAKU,SAAS,CAAEsE,cAAc,KAzF7BhF,EA2FnBiF,WAAa,kBAAMjF,EAAKU,SAAS,CAAEsE,cAAc,KA3F9BhF,EA6FnBuE,SAAW,kBAAMvE,EAAKuF,OAAOC,KAAK,SAAAC,GAAQ,OAAIzF,EAAKyG,sBAAsBhB,MA7FtDzF,EA+FnB6C,SAAW,SAAAiE,GAAC,OACV9G,EAAKU,SAAS,CACZuD,OAAOzI,OAAAuK,GAAA,EAAAvK,CAAA,GAAMwE,EAAKM,MAAM2D,OAAlBzI,OAAAuL,GAAA,EAAAvL,CAAA,GAA2BsL,EAAEE,OAAOjF,KAAO+E,EAAEE,OAAOpE,WAjG3C5C,EAoGnBoF,YAAc,SAAA0B,GAAC,OACb9G,EAAKU,SAAS,CACZyE,UAAU3J,OAAAuK,GAAA,EAAAvK,CAAA,GAAMwE,EAAKM,MAAM6E,UAAlB3J,OAAAuL,GAAA,EAAAvL,CAAA,GAA8BsL,EAAEE,OAAOjF,KAAO+E,EAAEE,OAAOpE,WAtGjD5C,EAyGnBwE,UAAY,SAAArD,GAAE,OAAInB,EAAKuF,OAAOC,KAAK,SAAAC,GAAQ,OAAIzF,EAAK2G,uBAAuBlB,EAAUtE,MAzGlEnB,EA2GnB4E,YAAc,SAAAzD,GAAE,OAAInB,EAAK1D,MAAMiF,OAAO,CAAEC,UAAW,CAAEC,GAAIN,MA3GtCnB,EA6GnBsE,kBAAoB,kBAAwB,IAAlBtE,EAAKM,MAAMa,IA7GlBnB,EA+GnBiI,iBAAmB,WACjB,IAAIC,EAAS,GAEb,OADAlI,EAAK1D,MAAM6L,iBAAiBvG,YAAYZ,IAAI,SAAAiF,GAAO,OAAIiC,EAAO1B,KAAK,CAAE5D,MAAOqD,EAAQ9E,GAAIwG,MAAO1B,EAAQ7I,UAChG8K,GAlHUlI,EAqHnBoI,kBAAoB,WAClB,IAAIF,EAAS,GAMb,OALAlI,EAAKM,MAAM2D,OAAO+D,YAAYhH,IAAI,SAAAqH,GAChC,IAAM1D,EAAS0D,EAASpC,QAAQW,cAActD,OAAO,SAACgF,EAAK1F,GAAN,OAAgB0F,EAAM1F,EAAM+B,QAAQ,GAEzF,OADAuD,EAAO1B,KAAPhL,OAAAuK,GAAA,EAAAvK,CAAA,GAAiB6M,EAAjB,CAA2B1D,YACpB,OAEFuD,GAzHPlI,EAAKM,MAAQ,CACXa,GAAI,EACJ8C,OAAQ,CAAE7G,MAAO,IACjB8G,OAAQ,GACRiB,UAAW,CAAEzC,YAAa,GAAI+B,KAAM,GAAIC,OAAQ,GAAIC,OAAQ,IAC5DU,UAAW,GACXL,cAAc,GATChF,yFAaO1D,GACpBA,EAAMR,MAAMyM,cACdrI,KAAKQ,SAAS,CAAES,GAAI7E,EAAM4K,MAAMC,OAAOhG,KACvCjB,KAAKQ,SAAS,CAAEuD,OAAQ3H,EAAMR,MAAMyM,gDAgHtC,IAAI7G,EA2BJ,OAxBEA,EADExB,KAAK5D,MAAMR,MAAME,SAAWkE,KAAK5D,MAAM6L,iBAAiBnM,QAChD,aAGRN,EAAAC,EAAAC,cAAC4M,GAAD,CACEvE,OAAQ/D,KAAKI,MAAM2D,OACnBpB,SAAU3C,KAAK2C,SACfiB,OAAQ5D,KAAK4D,OACbI,OAAQhE,KAAKI,MAAM4D,OACnBnD,KAAMb,KAAKkI,oBACX7D,SAAUrE,KAAKqE,SACfU,WAAY/E,KAAK+E,WACjBD,aAAc9E,KAAKI,MAAM0E,aACzBG,UAAWjF,KAAKI,MAAM6E,UACtBE,UAAWnF,KAAKI,MAAM+E,UACtBD,YAAalF,KAAKkF,YAClBF,UAAWhF,KAAKgF,UAChBV,UAAWtE,KAAKsE,UAChBI,YAAa1E,KAAK0E,YAClBN,kBAAmBpE,KAAKoE,oBACxBuD,YAAa3H,KAAK+H,qBAKjBvM,EAAAC,EAAAC,cAAC8B,EAAD,CAAMN,MAAM,SAASsE,UA5JZrG,cAgKLwG,qBACbC,kBAAQ/C,GAAoB,CAC1BgD,KAAM,QACNC,QAAS,SAAA1F,GAAK,MAAK,CACjB2F,6BAA6B,EAC7BT,UAAW,CAAEL,GAAI7E,EAAM4K,MAAMC,OAAOhG,IACpCkG,YAAa,mBAGjBvF,kBAAQ7C,GAAuB,CAC7B8C,KAAM,SACNC,QAAS,CAAEE,eAAgB,CAAC,CAAEpG,MAAO6C,QAEvCmD,kBAAQ3C,GAAuB,CAC7B4C,KAAM,SACNC,QAAS,CAAEE,eAAgB,CAAC,CAAEpG,MAAO6C,QAEvCmD,kBAAQzC,GAA2B,CACjC0C,KAAM,YACNC,QAAS,SAAA1F,GAAK,MAAK,CACjB2F,6BAA6B,EAC7BC,eAAgB,CACd,CACEpG,MAAOiD,GACPyC,UAAW,CAAEL,GAAI7E,EAAM4K,MAAMC,OAAOhG,UAK5CW,kBAAQvC,GAA2B,CACjCwC,KAAM,YACNC,QAAS,SAAA1F,GAAK,MAAK,CACjB2F,6BAA6B,EAC7BC,eAAgB,CACd,CACEpG,MAAOiD,GACPyC,UAAW,CAAEL,GAAI7E,EAAM4K,MAAMC,OAAOhG,UAK5CW,kBAAQrC,GAA2B,CACjCsC,KAAM,SACNC,QAAS,SAAA1F,GAAK,MAAK,CACjB2F,6BAA6B,EAC7BC,eAAgB,CACd,CACEpG,MAAOiD,GACPyC,UAAW,CAAEL,GAAI7E,EAAM4K,MAAMC,OAAOhG,UAK5CW,kBAAQnE,GAAoB,CAAEoE,KAAM,qBArDvBF,CAsDbsB,ICvMasF,2LAjBX,OACE/M,EAAAC,EAAAC,cAAAF,EAAAC,EAAA+M,SAAA,KACEhN,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOwM,OAAK,EAACC,KAAK,SAAStN,UAAWwB,IACtCpB,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAOwM,OAAK,EAACC,KAAK,QAAQtN,UAAWuN,IACrCnN,EAAAC,EAAAC,cAACkN,EAAD,CAAcH,OAAK,EAACC,KAAK,IAAItN,UAAWmC,IACxC/B,EAAAC,EAAAC,cAACkN,EAAD,CAAcH,OAAK,EAACC,KAAK,aAAatN,UAAWmC,IACjD/B,EAAAC,EAAAC,cAACkN,EAAD,CAAcH,OAAK,EAACC,KAAK,YAAYtN,UAAWqB,KAChDjB,EAAAC,EAAAC,cAACkN,EAAD,CAAcH,OAAK,EAACC,KAAK,WAAWtN,UAAWgK,KAC/C5J,EAAAC,EAAAC,cAACkN,EAAD,CAAcH,OAAK,EAACC,KAAK,eAAetN,UAAWgK,KACnD5J,EAAAC,EAAAC,cAACkN,EAAD,CAAcH,OAAK,EAACC,KAAK,UAAUtN,UAAWgM,KAC9C5L,EAAAC,EAAAC,cAACkN,EAAD,CAAcH,OAAK,EAACC,KAAK,SAAStN,UAAW6H,KAC7CzH,EAAAC,EAAAC,cAACkN,EAAD,CAAcH,OAAK,EAACC,KAAK,aAAatN,UAAW6H,aAbvC9H,cCFE0N,QACW,cAA7BC,OAAOhM,SAASiM,UAEe,UAA7BD,OAAOhM,SAASiM,UAEhBD,OAAOhM,SAASiM,SAAS/B,MACvB,iECPNgC,IAAS7M,OACPX,EAAAC,EAAAC,cAACC,EAAA,eAAD,CAAgBzB,OAAQA,GACtBsB,EAAAC,EAAAC,cAACuN,EAAA,EAAD,KACEzN,EAAAC,EAAAC,cAACwN,GAAD,QAGJrM,SAASsM,eAAe,SDgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhE,KAAK,SAAAiE,GACjCA,EAAaC","file":"static/js/main.4d0f1e00.chunk.js","sourcesContent":["import { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { withClientState } from \"apollo-link-state\";\nimport { ApolloLink } from \"apollo-link\";\n\nimport { defaults, resolvers } from \"./resolvers\";\n\nconst link = createHttpLink({\n  uri: process.env.REACT_APP_BASE_URL + \"/app/graphql\",\n  credentials: \"include\"\n});\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  cache,\n  link: ApolloLink.from([\n    withClientState({\n      defaults,\n      resolvers,\n      cache\n    }),\n    link\n  ])\n});\n\nexport default client;\n","export const resolvers = {\n  Mutation: {}\n};\n\nexport const defaults = {\n  containers: {\n    __typename: \"Containers\",\n    dashboard: {\n      __typename: \"Container\",\n      default: null\n    }\n  }\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst QUERY = gql`\n  {\n    me {\n      username\n    }\n  }\n`;\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Query query={QUERY}>\n    {({ loading, error, data }) => {\n      if (loading) return <div />;\n      return (\n        <Route\n          {...rest}\n          render={props => {\n            if (error || data.me.userneme) {\n              return <Redirect to=\"login\" />;\n            }\n            return <Component {...props} />;\n          }}\n        />\n      );\n    }}\n  </Query>\n);","import React, { Component } from \"react\";\n\nimport \"./Demo.css\";\n\nclass Counters extends Component {\n  render() {\n    return (\n      <div />\n    );\n  }\n}\n\nexport default Counters;\n","import React from \"react\";\n\nconst List = () => {\n  return (\n    <div className=\"login-redirect\">\n      <span>Redirecting...</span>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\n\nimport Content from \"./Content\";\n\nimport \"./Login.css\";\n\nclass Login extends Component {\n  componentDidMount() {\n    document.location.href = \"/accounts/login\";\n  }\n\n  render() {\n    return <Content />;\n  }\n}\n\nexport default Login;\n","import React from \"react\";\n\nexport const TwoSections = props => {\n  return (\n    <div className=\"grid\">\n      <div className=\"col-6 veritical-align-center\">\n        <h4 className=\"title-bar-title\">{props.title}</h4>\n      </div>\n      <div className=\"col-6 align-right\">\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default TwoSections;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TwoSections from \"../TwoSections/TwoSections\";\n\nconst Page = props => (\n  <div className=\"page\">\n    <div className=\"sidebar\">\n      <span className=\"logo\">\n        <i className=\"fas fa-chart-pie icon\" />\n        Zara\n      </span>\n      <div className=\"menu-buttons\">\n        <Link className=\"button button-light\" to=\"/counter\">\n          <i className=\"fas fa-plus fa-spacing\" />\n          New counter\n        </Link>\n      </div>\n      <ul className=\"menu\">\n        <li>\n          <Link to=\"/dashboard\">\n            <i className=\"fas fa-chart-area fa-spacing\" />\n            Dashboard\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/counters\">\n            <i className=\"fas fa-cube fa-spacing\" />\n            Counters\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/totals\">\n            <i className=\"fas fa-cubes fa-spacing\" />\n            Totals\n          </Link>\n        </li>\n      </ul>\n    </div>\n    <div className=\"content\">\n      <div className=\"title\">\n        <TwoSections title={props.title}>\n          <a className=\"logout\" href=\"/accounts/logout\">\n            <i className=\"fas fa-sign-out-alt  fa-spacing\" />\n            Logout\n          </a>\n        </TwoSections>\n      </div>\n      <div className=\"main\">{props.children}</div>\n    </div>\n  </div>\n);\n\nexport default Page;\n","import React, { Component } from \"react\";\n\nimport Page from \"../../components/Page/Page\"\n\nimport \"./Dashboard.css\";\n\nclass Dashboard extends Component {\n  render() {\n    return <Page title=\"Dashboard\"/>;\n  }\n}\n\nexport default Dashboard;\n","import gql from \"graphql-tag\";\n\nexport const QUERY_LIST_COUNTER = gql`\n  {\n    listCounter {\n      id\n      title\n    }\n  }\n`;\n\nexport const MUTATION_DELETE_COUNTER = gql`\n  mutation mutationDeleteCounter($pk: Int!) {\n    mutationDeleteCounter(pk: $pk) {\n      success\n    }\n  }\n`;\n\nexport const QUERY_DETAIL_COUNTER = gql`\n  query($id: Int) {\n    detailCounter(id: $id) {\n      id\n      title\n      counterrowSet {\n        id\n        date\n        description\n        period\n        amount\n      }\n    }\n  }\n`;\n\nexport const MUTATION_CREATE_COUNTER = gql`\n  mutation createCounter($title: String!) {\n    mutationCounter(input: { title: $title }) {\n      counter {\n        id\n      }\n      errors {\n        field\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_UPDATE_COUNTER = gql`\n  mutation updateCounter($id: ID!, $title: String!) {\n    mutationCounter(input: { id: $id, title: $title }) {\n      counter {\n        id\n      }\n      errors {\n        field\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_CREATE_COUNTER_ROW = gql`\n  mutation mutationCounterRow($counter: ID!, $date: Date!, $description: String!, $period: String!, $amount: Float!) {\n    mutationCounterRow(\n      input: { counter: $counter, date: $date, description: $description, period: $period, amount: $amount }\n    ) {\n      counterRow {\n        id\n      }\n      errors {\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_UPDATE_COUNTER_ROW = gql`\n  mutation mutationCounterRow(\n    $id: ID!\n    $counter: ID!\n    $date: Date!\n    $description: String!\n    $period: String!\n    $amount: Float!\n  ) {\n    mutationCounterRow(\n      input: { id: $id, counter: $counter, date: $date, description: $description, period: $period, amount: $amount }\n    ) {\n      counterRow {\n        id\n      }\n      errors {\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_DELETE_COUNTER_ROW = gql`\n  mutation mutationDeleteCounterRow($pk: Int!) {\n    mutationDeleteCounterRow(pk: $pk) {\n      success\n    }\n  }\n`;\n\nexport const QUERY_LIST_TOTAL = gql`\n  {\n    listTotal {\n      id\n      title\n    }\n  }\n`;\n\nexport const MUTATION_DELETE_TOTAL = gql`\n  mutation mutationDeleteTotal($pk: Int!) {\n    mutationDeleteTotal(pk: $pk) {\n      success\n    }\n  }\n`;\n\nexport const QUERY_DETAIL_TOTAL = gql`\n  query($id: Int) {\n    detailTotal(id: $id) {\n      id\n      title\n      totalrowSet {\n        id\n        counter {\n          id\n          title\n          counterrowSet {\n            amount\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const MUTATION_CREATE_TOTAL = gql`\n  mutation createTotal($title: String!) {\n    mutationTotal(input: { title: $title }) {\n      total {\n        id\n      }\n      errors {\n        field\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_UPDATE_TOTAL = gql`\n  mutation updateTotal($id: ID!, $title: String!) {\n    mutationTotal(input: { id: $id, title: $title }) {\n      total {\n        id\n      }\n      errors {\n        field\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_CREATE_TOTAL_ROW = gql`\n  mutation mutationTotalRow($total: ID!, $counter: ID!) {\n    mutationTotalRow(input: { total: $total, counter: $counter }) {\n      totalRow {\n        id\n      }\n      errors {\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_UPDATE_TOTAL_ROW = gql`\n  mutation mutationTotalRow($id: ID!, $total: ID!, $counter: ID!) {\n    mutationTotalRow(input: { id: $id, total: $total, counter: $counter }) {\n      totalRow {\n        id\n      }\n      errors {\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_DELETE_TOTAL_ROW = gql`\n  mutation mutationDeleteTotalRow($pk: Int!) {\n    mutationDeleteTotalRow(pk: $pk) {\n      success\n    }\n  }\n`;\n","import React from \"react\";\n\nexport const Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport const CardHeader = props => {\n  return <div className=\"card-header\">{props.children}</div>;\n};\n\nexport const CardSection = props => {\n  return <div className=\"card-section\">{props.children}</div>;\n};\n\nexport const CardBody = props => {\n  return <div className=\"card-body\">{props.children}</div>;\n};\n\nexport const CardButtons = props => {\n  return <div className=\"card-buttons\">{props.children}</div>;\n};\n\nexport default Card;","import React, { Component } from \"react\";\n\nclass Delete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirm: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"delete\">\n        {!this.state.confirm ? (\n          <div>\n            <button className=\"button-icon red\" onClick={() => this.setState({ confirm: true })}>\n              <i className=\"fa fa-trash\" />\n            </button>\n          </div>\n        ) : null}\n        {this.state.confirm ? (\n          <div>\n            <button\n              className=\"button-icon green\"\n              onClick={() => {\n                return this.props.onClick();\n              }}\n            >\n              <i className=\"fa fa-check\" />\n            </button>\n            <button className=\"button-icon red\" onClick={() => this.setState({ confirm: false })}>\n              <i className=\"fa fa-times\" />\n            </button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Delete;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Button = props => {\n  return <Link className=\"button button-plus\" to={props.link}><i className=\"fas fa-plus\" /></Link>;\n};\n\nexport default Button;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Card, CardHeader } from \"../../components/Card/Card\";\nimport Delete from \"../../components/Delete/Delete\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport ButtonPlus from \"../../components/ButtonPlus/ButtonPlus\";\n\nconst List = props => {\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <TwoSections title=\"Your counters\" />\n        </CardHeader>\n        <table>\n          <thead>\n            <tr>\n              <th width=\"5%\">Id</th>\n              <th>Title</th>\n              <th width=\"15%\" />\n            </tr>\n          </thead>\n          <tbody>\n            {props.list.map(item => {\n              return (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n                  <td>\n                    <Link to={\"/counter/\" + item.id}>{item.title}</Link>\n                  </td>\n                  <td>\n                    <Delete onClick={() => props.onDelete(item.id)} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </Card>\n      <ButtonPlus link=\"/counter\" />\n    </div>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport {\n  QUERY_LIST_COUNTER,\n  MUTATION_DELETE_COUNTER\n} from \"../../queries/index\";\nimport Page from \"../../components/Page/Page\";\nimport List from \"./List\";\n\nimport \"./Counters.css\";\n\nclass Counters extends Component {\n  onDelete = id => {\n    this.props.delete({ variables: { pk: id } });\n  };\n\n  render() {\n    let content;\n\n    if (this.props.query.loading) {\n      content = \"Loading...\";\n    } else {\n      content = (\n        <List list={this.props.query.listCounter} onDelete={this.onDelete} />\n      );\n    }\n\n    return <Page title=\"Counters\">{content}</Page>;\n  }\n}\n\nexport default compose(\n  graphql(QUERY_LIST_COUNTER, {\n    name: \"query\",\n    options: { notifyOnNetworkStatusChange: true }\n  }),\n  graphql(MUTATION_DELETE_COUNTER, {\n    name: \"delete\",\n    options: { refetchQueries: [{ query: QUERY_LIST_COUNTER }] }\n  })\n)(Counters);\n","export const formatNumber = number =>\n  number ? number.toLocaleString(\"en\", { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : \"0.00\";\n","import React from \"react\";\n\nconst FieldText = props => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name}>{props.description}</label>\n      <input\n        name={props.name}\n        type={props.type ? props.type : \"text\"}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.helpText}\n      />\n      <small>{props.error && props.error.messages.join(\", \")}</small>\n    </div>\n  );\n};\n\nexport default FieldText;\n","import React from \"react\";\n\nconst Button = props => {\n  return <button disabled={props.disabled} className=\"button\" onClick={props.onClick}>{props.children}</button>;\n};\n\nexport default Button;","import React from \"react\";\n\nimport { formatNumber } from \"../../utils/utils\";\n\nconst Total = props => {\n  return (\n    <span className=\"total\">\n      {props.list.length === 0\n        ? formatNumber(0)\n        : props.list.length === 1\n        ? formatNumber(props.list[0][props.column])\n        : formatNumber(\n            props.list.reduce((total, item) =>\n              total[props.column] ? total[props.column] + item[props.column] : total + item[props.column]\n            )\n          )}{\" \"}\n      &euro;\n    </span>\n  );\n};\n\nexport default Total;\n","import React from \"react\";\n\nimport TwoSections from \"../TwoSections/TwoSections\";\nimport Button from \"../Button/Button\";\n\nconst Modal = props => {\n  return (\n    <div className={props.isVisible ? \"modal\" : \"modal hidden\"}>\n      <div>\n        <TwoSections title={props.title}>\n          <span className=\"pointer\" onClick={props.onCloseModal}>\n            <i className=\"fas fa-times\" />\n          </span>\n        </TwoSections>\n        <div>{props.children}</div>\n        <Button onClick={props.onValidate}>Save</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nimport { formatNumber } from \"../../utils/utils\";\nimport FieldText from \"../../components/FieldText/FieldText\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardSection\n} from \"../../components/Card/Card\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport Button from \"../../components/Button/Button\";\nimport Delete from \"../../components/Delete/Delete\";\nimport Total from \"../../components/Total/Total\";\nimport Modal from \"../../components/Modal/Modal\";\n\nconst Detail = props => {\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <TwoSections title=\"Counter detail\">\n            <Button onClick={props.onSave}>Save</Button>\n          </TwoSections>\n        </CardHeader>\n        <CardBody>\n          <div>\n            <FieldText\n              name=\"title\"\n              description=\"Title\"\n              value={props.detail.title}\n              helpText=\"Title of conter\"\n              onChange={props.onChange}\n              error={props.errors.find(error => error.field === \"title\")}\n            />\n          </div>\n        </CardBody>\n        <CardSection>\n          <TwoSections title=\"Rows\">\n            <Button disabled={props.buttonAddDisabled} onClick={props.clickAdd}>\n              Add\n            </Button>\n          </TwoSections>\n        </CardSection>\n        <table>\n          <thead>\n            <tr>\n              <th width=\"5%\">Id</th>\n              <th>Description</th>\n              <th>Date</th>\n              <th>Period</th>\n              <th className=\"align-right\">Amount</th>\n              <th width=\"15%\" />\n            </tr>\n          </thead>\n          <tbody>\n            {props.list &&\n              props.list.map(item => {\n                return (\n                  <tr key={item.id}>\n                    <td>{item.id}</td>\n                    <td>\n                      <button onClick={() => props.clickEdit(item.id)}>\n                        {item.description}\n                      </button>\n                    </td>\n                    <td>{item.date}</td>\n                    <td>{item.period}</td>\n                    <td className=\"align-right\">\n                      {formatNumber(item.amount)} &euro;\n                    </td>\n                    <td>\n                      <Delete onClick={() => props.clickDelete(item.id)} />\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colSpan={5} className=\"align-right\">\n                <Total list={props.list || []} column=\"amount\" />\n              </td>\n              <td colSpan={1} />\n            </tr>\n          </tfoot>\n        </table>\n      </Card>\n      <Modal\n        title=\"Add a counter row\"\n        isVisible={props.modalVisible}\n        onCloseModal={props.closeModal}\n        onValidate={props.onSaveRow}\n      >\n        <div className=\"grid\">\n          <div className=\"col-2\">\n            <FieldText\n              type=\"date\"\n              name=\"date\"\n              description=\"Date\"\n              value={props.rowDetail.date}\n              helpText=\"Date of counter row\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(error => error.field === \"date\")}\n            />\n          </div>\n          <div className=\"col-6\">\n            <FieldText\n              name=\"description\"\n              description=\"Description\"\n              value={props.rowDetail.description}\n              helpText=\"Description of counter row\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(\n                error => error.field === \"description\"\n              )}\n            />\n          </div>\n          <div className=\"col-2\">\n            <FieldText\n              name=\"period\"\n              description=\"Period\"\n              value={props.rowDetail.period}\n              helpText=\"Period of counter row\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(error => error.field === \"period\")}\n            />\n          </div>\n          <div className=\"col-2\">\n            <FieldText\n              name=\"amount\"\n              description=\"Amount\"\n              value={props.rowDetail.amount}\n              helpText=\"Amount of counter row\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(error => error.field === \"amount\")}\n            />\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport {\n  QUERY_DETAIL_COUNTER,\n  MUTATION_CREATE_COUNTER,\n  MUTATION_UPDATE_COUNTER,\n  QUERY_LIST_COUNTER,\n  MUTATION_CREATE_COUNTER_ROW,\n  MUTATION_UPDATE_COUNTER_ROW,\n  MUTATION_DELETE_COUNTER_ROW\n} from \"../../queries/index\";\nimport Page from \"../../components/Page/Page\";\nimport Detail from \"./Detail\";\n\nimport \"./Counter.css\";\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: 0,\n      detail: { title: \"\" },\n      errors: [],\n      rowDetail: { description: \"\", date: \"\", period: \"\", amount: \"\" },\n      rowErrors: [],\n      modalVisible: false\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.query.detailCounter) {\n      this.setState({ id: props.match.params.id });\n      this.setState({ detail: props.query.detailCounter });\n    }\n  }\n\n  onSave = () => this.save().then(response => this.errorOrRedirect(response));\n\n  onSaveRow = () => this.saveRow().then(response => this.errorOrCloseModal(response));\n\n  save = () => {\n    if (this.state.id) {\n      return this.props.update({\n        variables: { id: this.state.id, title: this.state.detail.title }\n      });\n    }\n    return this.props.create({ variables: { ...this.state.detail } });\n  };\n\n  saveRow = () => {\n    if (this.state.rowDetail.id) {\n      return this.props.updateRow({\n        variables: { ...this.state.rowDetail, counter: this.state.id }\n      });\n    }\n    return this.props.createRow({\n      variables: { ...this.state.rowDetail, counter: this.state.id }\n    });\n  };\n\n  error = response => this.setState({ errors: response.data.mutationCounter.errors });\n\n  errorRow = response => this.setState({ rowErrors: response.data.mutationCounterRow.errors });\n\n  resetRow = () =>\n    this.setState({\n      rowDetail: { description: \"\", date: \"\", period: \"\", amount: \"\" },\n      rowErrors: []\n    });\n\n  errorOrRedirect = response => {\n    if (response.data.mutationCounter.errors.length > 0) {\n      return this.error(response);\n    }\n    return this.props.history.push(\"/counter/\" + response.data.mutationCounter.counter.id);\n  };\n\n  errorOrOpenModalOnAdd = response => {\n    if (response.data.mutationCounter.errors.length > 0) {\n      return this.error(response);\n    }\n    this.resetRow();\n    return this.openModal();\n  };\n\n  errorOrOpenModalOnEdit = (response, id) => {\n    if (response.data.mutationCounter.errors.length > 0) {\n      return this.error(response);\n    }\n\n    const detail = this.state.detail.counterrowSet.find(row => row.id === id);\n\n    this.setState({ rowDetail: detail });\n\n    return this.openModal();\n  };\n\n  errorOrCloseModal = response => {\n    if (response.data.mutationCounterRow.errors.length > 0) {\n      this.errorRow(response);\n    }\n    this.resetRow();\n    return this.closeModal();\n  };\n\n  openModal = () => this.setState({ modalVisible: true });\n\n  closeModal = () => this.setState({ modalVisible: false });\n\n  clickAdd = () => this.save().then(response => this.errorOrOpenModalOnAdd(response));\n\n  onChange = e =>\n    this.setState({\n      detail: { ...this.state.detail, [e.target.name]: e.target.value }\n    });\n\n  onChangeRow = e =>\n    this.setState({\n      rowDetail: { ...this.state.rowDetail, [e.target.name]: e.target.value }\n    });\n\n  clickEdit = id => this.save().then(response => this.errorOrOpenModalOnEdit(response, id));\n\n  clickDelete = id => this.props.delete({ variables: { pk: id } });\n\n  buttonAddDisabled = () => this.state.id === 0;\n\n  render() {\n    let content;\n\n    if (this.props.query.loading) {\n      content = \"Loading...\";\n    } else {\n      content = (\n        <Detail\n          detail={this.state.detail}\n          onChange={this.onChange}\n          onSave={this.onSave}\n          errors={this.state.errors}\n          list={this.state.detail.counterrowSet}\n          clickAdd={this.clickAdd}\n          closeModal={this.closeModal}\n          modalVisible={this.state.modalVisible}\n          rowDetail={this.state.rowDetail}\n          rowErrors={this.state.rowErrors}\n          onChangeRow={this.onChangeRow}\n          onSaveRow={this.onSaveRow}\n          clickEdit={this.clickEdit}\n          clickDelete={this.clickDelete}\n          buttonAddDisabled={this.buttonAddDisabled()}\n        />\n      );\n    }\n\n    return <Page title=\"Counter\">{content}</Page>;\n  }\n}\n\nexport default compose(\n  graphql(QUERY_DETAIL_COUNTER, {\n    name: \"query\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      variables: { id: props.match.params.id },\n      fetchPolicy: \"network-only\"\n    })\n  }),\n  graphql(MUTATION_CREATE_COUNTER, {\n    name: \"create\",\n    options: { refetchQueries: [{ query: QUERY_LIST_COUNTER }] }\n  }),\n  graphql(MUTATION_UPDATE_COUNTER, {\n    name: \"update\",\n    options: { refetchQueries: [{ query: QUERY_LIST_COUNTER }] }\n  }),\n  graphql(MUTATION_CREATE_COUNTER_ROW, {\n    name: \"createRow\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_COUNTER,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(MUTATION_UPDATE_COUNTER_ROW, {\n    name: \"updateRow\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_COUNTER,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(MUTATION_DELETE_COUNTER_ROW, {\n    name: \"delete\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_COUNTER,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  })\n)(Counter);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Card, CardHeader } from \"../../components/Card/Card\";\nimport Delete from \"../../components/Delete/Delete\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport ButtonPlus from \"../../components/ButtonPlus/ButtonPlus\";\n\nconst List = props => {\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <TwoSections title=\"Your totals\" />\n        </CardHeader>\n        <table>\n          <thead>\n            <tr>\n              <th width=\"5%\">Id</th>\n              <th>Title</th>\n              <th width=\"15%\" />\n            </tr>\n          </thead>\n          <tbody>\n            {props.list.map(item => {\n              return (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n                  <td>\n                    <Link to={\"/total/\" + item.id}>{item.title}</Link>\n                  </td>\n                  <td>\n                    <Delete onClick={() => props.onDelete(item.id)} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </Card>\n      <ButtonPlus link=\"/total\" />\n    </div>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport { QUERY_LIST_TOTAL, MUTATION_DELETE_TOTAL } from \"../../queries/index\";\nimport Page from \"../../components/Page/Page\";\nimport List from \"./List\";\n\nimport \"./Totals.css\";\n\nclass Totals extends Component {\n  onDelete = id => {\n    this.props.delete({ variables: { pk: id } });\n  };\n\n  render() {\n    let content;\n\n    if (this.props.query.loading) {\n      content = \"Loading...\";\n    } else {\n      content = <List list={this.props.query.listTotal} onDelete={this.onDelete} />;\n    }\n\n    return <Page title=\"Totals\">{content}</Page>;\n  }\n}\n\nexport default compose(\n  graphql(QUERY_LIST_TOTAL, {\n    name: \"query\",\n    options: { notifyOnNetworkStatusChange: true }\n  }),\n  graphql(MUTATION_DELETE_TOTAL, {\n    name: \"delete\",\n    options: { refetchQueries: [{ query: QUERY_LIST_TOTAL }] }\n  })\n)(Totals);\n","import React from \"react\";\n\nconst FieldSelect = props => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name}>{props.description}</label>\n      <select name={props.name} value={props.value} onChange={props.onChange}>\n        {props.options.map(option => (\n          <option value={option.value}>{option.label}</option>\n        ))}\n      </select>\n      <small>{props.error && props.error.messages.join(\", \")}</small>\n    </div>\n  );\n};\n\nexport default FieldSelect;\n","import React from \"react\";\n\nimport { formatNumber } from \"../../utils/utils\";\nimport FieldText from \"../../components/FieldText/FieldText\";\nimport FieldSelect from \"../../components/FieldSelect/FieldSelect\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardSection\n} from \"../../components/Card/Card\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport Button from \"../../components/Button/Button\";\nimport Delete from \"../../components/Delete/Delete\";\nimport Total from \"../../components/Total/Total\";\nimport Modal from \"../../components/Modal/Modal\";\n\nconst Detail = props => {\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <TwoSections title=\"Total detail\">\n            <Button onClick={props.onSave}>Save</Button>\n          </TwoSections>\n        </CardHeader>\n        <CardBody>\n          <div>\n            <FieldText\n              name=\"title\"\n              description=\"Title\"\n              value={props.detail.title}\n              helpText=\"Title of total\"\n              onChange={props.onChange}\n              error={props.errors.find(error => error.field === \"title\")}\n            />\n          </div>\n        </CardBody>\n        <CardSection>\n          <TwoSections title=\"Rows\">\n            <Button disabled={props.buttonAddDisabled} onClick={props.clickAdd}>\n              Add\n            </Button>\n          </TwoSections>\n        </CardSection>\n        <table>\n          <thead>\n            <tr>\n              <th width=\"5%\">Id</th>\n              <th>Counter</th>\n              <th className=\"align-right\">Amount</th>\n              <th width=\"15%\" />\n            </tr>\n          </thead>\n          <tbody>\n            {props.list &&\n              props.list.map(item => {\n                return (\n                  <tr key={item.id}>\n                    <td>{item.id}</td>\n                    <td>\n                      <button onClick={() => props.clickEdit(item.id)}>\n                        {item.counter.title}\n                      </button>\n                    </td>\n                    <td className=\"align-right\">\n                      {formatNumber(item.amount)} &euro;\n                    </td>\n                    <td>\n                      <Delete onClick={() => props.clickDelete(item.id)} />\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colSpan={3} className=\"align-right\">\n                <Total list={props.list || []} column=\"amount\" />\n              </td>\n              <td colSpan={1} />\n            </tr>\n          </tfoot>\n        </table>\n      </Card>\n      <Modal\n        title=\"Add a total row\"\n        isVisible={props.modalVisible}\n        onCloseModal={props.closeModal}\n        onValidate={props.onSaveRow}\n      >\n        <div className=\"grid\">\n          <div className=\"col-6\">\n            <FieldSelect\n              name=\"counter\"\n              description=\"Counter\"\n              value={props.rowDetail.counter}\n              options={props.counterList}\n              helpText=\"Counter\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(error => error.field === \"date\")}\n            />\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport {\n  QUERY_DETAIL_TOTAL,\n  MUTATION_CREATE_TOTAL,\n  MUTATION_UPDATE_TOTAL,\n  QUERY_LIST_TOTAL,\n  MUTATION_CREATE_TOTAL_ROW,\n  MUTATION_UPDATE_TOTAL_ROW,\n  MUTATION_DELETE_TOTAL_ROW,\n  QUERY_LIST_COUNTER\n} from \"../../queries/index\";\nimport Page from \"../../components/Page/Page\";\nimport Detail from \"./Detail\";\n\nimport \"./Total.css\";\n\nclass Total extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: 0,\n      detail: { title: \"\" },\n      errors: [],\n      rowDetail: { description: \"\", date: \"\", period: \"\", amount: \"\" },\n      rowErrors: [],\n      modalVisible: false\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.query.detailTotal) {\n      this.setState({ id: props.match.params.id });\n      this.setState({ detail: props.query.detailTotal });\n    }\n  }\n\n  onSave = () => this.save().then(response => this.errorOrRedirect(response));\n\n  onSaveRow = () => this.saveRow().then(response => this.errorOrCloseModal(response));\n\n  save = () => {\n    if (this.state.id) {\n      return this.props.update({\n        variables: { id: this.state.id, title: this.state.detail.title }\n      });\n    }\n    return this.props.create({ variables: { ...this.state.detail } });\n  };\n\n  saveRow = () => {\n    if (this.state.rowDetail.id) {\n      return this.props.updateRow({\n        variables: { ...this.state.rowDetail, total: this.state.id }\n      });\n    }\n    return this.props.createRow({\n      variables: { ...this.state.rowDetail, total: this.state.id }\n    });\n  };\n\n  error = response => this.setState({ errors: response.data.mutationTotal.errors });\n\n  errorRow = response => this.setState({ rowErrors: response.data.mutationTotalRow.errors });\n\n  resetRow = () =>\n    this.setState({\n      rowDetail: { counter: 0 },\n      rowErrors: []\n    });\n\n  errorOrRedirect = response => {\n    if (response.data.mutationTotal.errors.length > 0) {\n      return this.error(response);\n    }\n    return this.props.history.push(\"/total/\" + response.data.mutationTotal.total.id);\n  };\n\n  errorOrOpenModalOnAdd = response => {\n    if (response.data.mutationTotal.errors.length > 0) {\n      return this.error(response);\n    }\n    this.resetRow();\n    return this.openModal();\n  };\n\n  errorOrOpenModalOnEdit = (response, id) => {\n    if (response.data.mutationTotal.errors.length > 0) {\n      return this.error(response);\n    }\n\n    const detail = this.state.detail.totalrowSet.find(row => row.id === id);\n\n    this.setState({ rowDetail: detail });\n\n    return this.openModal();\n  };\n\n  errorOrCloseModal = response => {\n    if (response.data.mutationTotalRow.errors.length > 0) {\n      this.errorRow(response);\n    }\n    this.resetRow();\n    return this.closeModal();\n  };\n\n  openModal = () => this.setState({ modalVisible: true });\n\n  closeModal = () => this.setState({ modalVisible: false });\n\n  clickAdd = () => this.save().then(response => this.errorOrOpenModalOnAdd(response));\n\n  onChange = e =>\n    this.setState({\n      detail: { ...this.state.detail, [e.target.name]: e.target.value }\n    });\n\n  onChangeRow = e =>\n    this.setState({\n      rowDetail: { ...this.state.rowDetail, [e.target.name]: e.target.value }\n    });\n\n  clickEdit = id => this.save().then(response => this.errorOrOpenModalOnEdit(response, id));\n\n  clickDelete = id => this.props.delete({ variables: { pk: id } });\n\n  buttonAddDisabled = () => this.state.id === 0;\n\n  adaptCounterList = () => {\n    let result = [];\n    this.props.queryListCounter.listCounter.map(counter => result.push({ value: counter.id, label: counter.title }));\n    return result;\n  };\n\n  adaptTotalRowList = () => {\n    let result = [];\n    this.state.detail.totalrowSet.map(totalRow => {\n      const amount = totalRow.counter.counterrowSet.reduce((sum, value) => sum + value.amount, 0);\n      result.push({ ...totalRow, amount });\n      return null;\n    });\n    return result;\n  };\n\n  render() {\n    let content;\n\n    if (this.props.query.loading || this.props.queryListCounter.loading) {\n      content = \"Loading...\";\n    } else {\n      content = (\n        <Detail\n          detail={this.state.detail}\n          onChange={this.onChange}\n          onSave={this.onSave}\n          errors={this.state.errors}\n          list={this.adaptTotalRowList()}\n          clickAdd={this.clickAdd}\n          closeModal={this.closeModal}\n          modalVisible={this.state.modalVisible}\n          rowDetail={this.state.rowDetail}\n          rowErrors={this.state.rowErrors}\n          onChangeRow={this.onChangeRow}\n          onSaveRow={this.onSaveRow}\n          clickEdit={this.clickEdit}\n          clickDelete={this.clickDelete}\n          buttonAddDisabled={this.buttonAddDisabled()}\n          counterList={this.adaptCounterList()}\n        />\n      );\n    }\n\n    return <Page title=\"Total\">{content}</Page>;\n  }\n}\n\nexport default compose(\n  graphql(QUERY_DETAIL_TOTAL, {\n    name: \"query\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      variables: { id: props.match.params.id },\n      fetchPolicy: \"network-only\"\n    })\n  }),\n  graphql(MUTATION_CREATE_TOTAL, {\n    name: \"create\",\n    options: { refetchQueries: [{ query: QUERY_LIST_TOTAL }] }\n  }),\n  graphql(MUTATION_UPDATE_TOTAL, {\n    name: \"update\",\n    options: { refetchQueries: [{ query: QUERY_LIST_TOTAL }] }\n  }),\n  graphql(MUTATION_CREATE_TOTAL_ROW, {\n    name: \"createRow\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_TOTAL,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(MUTATION_UPDATE_TOTAL_ROW, {\n    name: \"updateRow\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_TOTAL,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(MUTATION_DELETE_TOTAL_ROW, {\n    name: \"delete\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_TOTAL,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(QUERY_LIST_COUNTER, { name: \"queryListCounter\" })\n)(Total);\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport { PrivateRoute } from \"../../utils/ProvateRoute\";\nimport Demo from \"../Demo/Demo\";\nimport Login from \"../Login/Login\";\nimport Dashboard from \"../Dashboard/Dashboard\"\nimport Counters from \"../Counters/Counters\"\nimport Counter from \"../Counter/Counter\"\nimport Totals from \"../Totals/Totals\"\nimport Total from \"../Total/Total\"\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/demo\" component={Demo} />\n        <PrivateRoute exact path=\"/\" component={Dashboard} />\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n        <PrivateRoute exact path=\"/counters\" component={Counters} />\n        <PrivateRoute exact path=\"/counter\" component={Counter} />\n        <PrivateRoute exact path=\"/counter/:id\" component={Counter} />\n        <PrivateRoute exact path=\"/totals\" component={Totals} />\n        <PrivateRoute exact path=\"/total\" component={Total} />\n        <PrivateRoute exact path=\"/total/:id\" component={Total} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ApolloProvider } from \"react-apollo\";\n\nimport client from \"./store/client\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./index.css\"\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}