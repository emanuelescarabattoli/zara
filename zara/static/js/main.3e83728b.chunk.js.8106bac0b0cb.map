{"version":3,"sources":["store/client.js","store/resolvers.js","utils/ProvateRoute.js","containers/Demo/Demo.js","components/Card/Card.js","components/TwoSections/TwoSections.js","components/Button/Button.js","components/FieldText/FieldText.js","containers/Login/Content.js","containers/Login/Login.js","components/Page/Page.js","containers/Dashboard/Dashboard.js","queries/index.js","components/Delete/Delete.js","components/ButtonPlus/ButtonPlus.js","containers/Counters/List.js","containers/Counters/Counters.js","utils/utils.js","components/Total/Total.js","components/Modal/Modal.js","containers/Counter/Detail.js","containers/Counter/Counter.js","containers/Totals/List.js","containers/Totals/Totals.js","components/FieldSelect/FieldSelect.js","containers/Total/Detail.js","containers/Total/Total.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["link","createHttpLink","uri","credentials","cache","InMemoryCache","client","ApolloClient","ApolloLink","from","withClientState","defaults","containers","__typename","dashboard","default","resolvers","Mutation","QUERY","gql","_templateObject","PrivateRoute","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","react_apollo_browser_umd","query","_ref2","loading","error","data","Route","assign","render","props","me","userneme","Redirect","to","Counters","Card","className","children","CardHeader","CardSection","CardBody","CardButtons","TwoSections","title","Button","disabled","onClick","FieldText","htmlFor","name","description","type","value","onChange","placeholder","helpText","messages","join","List","Card_Card","Card_CardHeader","components_TwoSections_TwoSections","Card_CardBody","components_FieldText_FieldText","username","password","Card_CardButtons","components_Button_Button","onLogin","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","objectSpread","state","detail","defineProperty","target","fetch","method","mode","body","Content","Page","Link","Dashboard","components_Page_Page","QUERY_LIST_COUNTER","queries_templateObject","MUTATION_DELETE_COUNTER","_templateObject2","QUERY_DETAIL_COUNTER","_templateObject3","MUTATION_CREATE_COUNTER","_templateObject4","MUTATION_UPDATE_COUNTER","_templateObject5","MUTATION_CREATE_COUNTER_ROW","_templateObject6","MUTATION_UPDATE_COUNTER_ROW","_templateObject7","MUTATION_DELETE_COUNTER_ROW","_templateObject8","QUERY_LIST_TOTAL","_templateObject9","MUTATION_DELETE_TOTAL","_templateObject10","QUERY_DETAIL_TOTAL","_templateObject11","MUTATION_CREATE_TOTAL","_templateObject12","MUTATION_UPDATE_TOTAL","_templateObject13","MUTATION_CREATE_TOTAL_ROW","_templateObject14","MUTATION_UPDATE_TOTAL_ROW","_templateObject15","MUTATION_DELETE_TOTAL_ROW","_templateObject16","Delete","confirm","_this2","width","list","map","item","key","id","components_Delete_Delete","onDelete","ButtonPlus","delete","variables","pk","content","Counters_List","listCounter","compose","graphql","options","notifyOnNetworkStatusChange","refetchQueries","formatNumber","number","toLocaleString","minimumFractionDigits","maximumFractionDigits","Total","length","column","reduce","total","Modal","isVisible","onCloseModal","onValidate","Detail","onSave","errors","find","field","Card_CardSection","buttonAddDisabled","clickAdd","clickEdit","date","period","amount","clickDelete","colSpan","components_Total_Total","components_Modal_Modal","modalVisible","closeModal","onSaveRow","rowDetail","onChangeRow","rowErrors","Counter","save","then","response","errorOrRedirect","saveRow","errorOrCloseModal","update","create","updateRow","counter","createRow","mutationCounter","errorRow","mutationCounterRow","resetRow","history","push","errorOrOpenModalOnAdd","openModal","errorOrOpenModalOnEdit","counterrowSet","row","detailCounter","match","params","Counter_Detail","fetchPolicy","Totals","Totals_List","listTotal","FieldSelect","option","label","components_FieldSelect_FieldSelect","counterList","mutationTotal","mutationTotalRow","totalrowSet","adaptCounterList","result","queryListCounter","adaptTotalRowList","totalRow","sum","detailTotal","Total_Detail","App","Fragment","exact","path","Demo","ProvateRoute_PrivateRoute","Boolean","window","location","hostname","ReactDOM","BrowserRouter","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3e83728b.chunk.js","sourcesContent":["import { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { withClientState } from \"apollo-link-state\";\nimport { ApolloLink } from \"apollo-link\";\n\nimport { defaults, resolvers } from \"./resolvers\";\n\nconst link = createHttpLink({\n  uri: \"http://localhost:8000/app/graphql\",\n  credentials: \"include\"\n});\n\nconst cache = new InMemoryCache();\n\nconst client = new ApolloClient({\n  cache,\n  link: ApolloLink.from([\n    withClientState({\n      defaults,\n      resolvers,\n      cache\n    }),\n    link\n  ])\n});\n\nexport default client;\n","export const resolvers = {\n  Mutation: {}\n};\n\nexport const defaults = {\n  containers: {\n    __typename: \"Containers\",\n    dashboard: {\n      __typename: \"Container\",\n      default: null\n    }\n  }\n};\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst QUERY = gql`\n  {\n    me {\n      username\n    }\n  }\n`;\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n  <Query query={QUERY}>\n    {({ loading, error, data }) => {\n      if (loading) return <div />;\n      return (\n        <Route\n          {...rest}\n          render={props => {\n            if (error || data.me.userneme) {\n              return <Redirect to=\"/accounts/login\" />;\n            }\n            return <Component {...props} />;\n          }}\n        />\n      );\n    }}\n  </Query>\n);","import React, { Component } from \"react\";\n\nimport \"./Demo.css\";\n\nclass Counters extends Component {\n  render() {\n    return (\n      <div />\n    );\n  }\n}\n\nexport default Counters;\n","import React from \"react\";\n\nexport const Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport const CardHeader = props => {\n  return <div className=\"card-header\">{props.children}</div>;\n};\n\nexport const CardSection = props => {\n  return <div className=\"card-section\">{props.children}</div>;\n};\n\nexport const CardBody = props => {\n  return <div className=\"card-body\">{props.children}</div>;\n};\n\nexport const CardButtons = props => {\n  return <div className=\"card-buttons\">{props.children}</div>;\n};\n\nexport default Card;","import React from \"react\";\n\nexport const TwoSections = props => {\n  return (\n    <div className=\"grid\">\n      <div className=\"col-6 veritical-align-center\">\n        <h4 className=\"title-bar-title\">{props.title}</h4>\n      </div>\n      <div className=\"col-6 align-right\">\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default TwoSections;\n","import React from \"react\";\n\nconst Button = props => {\n  return <button disabled={props.disabled} className=\"button\" onClick={props.onClick}>{props.children}</button>;\n};\n\nexport default Button;","import React from \"react\";\n\nconst FieldText = props => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name}>{props.description}</label>\n      <input\n        name={props.name}\n        type={props.type ? props.type : \"text\"}\n        value={props.value}\n        onChange={props.onChange}\n        placeholder={props.helpText}\n      />\n      <small>{props.error && props.error.messages.join(\", \")}</small>\n    </div>\n  );\n};\n\nexport default FieldText;\n","import React from \"react\";\n\nimport { Card, CardHeader, CardBody, CardButtons } from \"../../components/Card/Card\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport Button from \"../../components/Button/Button\";\nimport FieldText from \"../../components/FieldText/FieldText\";\n\nconst List = props => {\n  return (\n    <div className=\"login-container\">\n      <div className=\"login\">\n        <Card>\n          <CardHeader>\n            <TwoSections title=\"Login\" />\n          </CardHeader>\n          <CardBody>\n            <FieldText\n              name=\"username\"\n              description=\"Username\"\n              helpText=\"Username\"\n              value={props.username}\n              onChange={props.onChange}\n            />\n            <FieldText\n              type=\"password\"\n              name=\"password\"\n              description=\"Password\"\n              helpText=\"Password\"\n              value={props.password}\n              onChange={props.onChange}\n            />\n          </CardBody>\n          <CardButtons>\n            <Button onClick={props.onLogin}>Login</Button>\n          </CardButtons>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\n\nimport Content from \"./Content\";\n\nimport \"./Login.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n\n  onChange = e => this.setState({ ...this.state.detail, [e.target.name]: e.target.value });\n\n  onLogin = () => {\n    fetch(\"http://localhost:8000/accounts/login\", {\n      method: \"POST\",\n      mode:'no-cors',\n      credentials: \"include\",\n      body: { username: this.state.username, password: this.state.password }\n    });\n  };\n\n  render() {\n    return (\n      <Content\n        username={this.state.username}\n        password={this.props.password}\n        onChange={this.onChange}\n        onLogin={this.onLogin}\n      />\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Page = props => {\n  return (\n    <div className=\"page\">\n      <div className=\"sidebar\">\n        <span className=\"logo\">\n          <i className=\"fas fa-chart-pie icon\" />\n          Zara\n        </span>\n        <div className=\"menu-buttons\">\n          <Link className=\"button button-light\" to=\"/counter\">\n            <i className=\"fas fa-plus fa-spacing\" />\n            New counter\n          </Link>\n        </div>\n        <ul className=\"menu\">\n          <li>\n            <Link to=\"/dashboard\">\n              <i className=\"fas fa-chart-area fa-spacing\" />\n              Dashboard\n            </Link>\n          </li>\n          <li>\n          <Link to=\"/counters\">\n              <i className=\"fas fa-cube fa-spacing\" />\n              Counters\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/totals\">\n              <i className=\"fas fa-cubes fa-spacing\" />\n              Totals\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <div className=\"content\">\n        <span className=\"title\">{props.title}</span>\n        <div className=\"main\">{props.children}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Page;\n","import React, { Component } from \"react\";\n\nimport Page from \"../../components/Page/Page\"\n\nimport \"./Dashboard.css\";\n\nclass Dashboard extends Component {\n  render() {\n    return <Page title=\"Dashboard\"/>;\n  }\n}\n\nexport default Dashboard;\n","import gql from \"graphql-tag\";\n\nexport const QUERY_LIST_COUNTER = gql`\n  {\n    listCounter {\n      id\n      title\n    }\n  }\n`;\n\nexport const MUTATION_DELETE_COUNTER = gql`\n  mutation mutationDeleteCounter($pk: Int!) {\n    mutationDeleteCounter(pk: $pk) {\n      success\n    }\n  }\n`;\n\nexport const QUERY_DETAIL_COUNTER = gql`\n  query($id: Int) {\n    detailCounter(id: $id) {\n      id\n      title\n      counterrowSet {\n        id\n        date\n        description\n        period\n        amount\n      }\n    }\n  }\n`;\n\nexport const MUTATION_CREATE_COUNTER = gql`\n  mutation createCounter($title: String!) {\n    mutationCounter(input: { title: $title }) {\n      counter {\n        id\n      }\n      errors {\n        field\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_UPDATE_COUNTER = gql`\n  mutation updateCounter($id: ID!, $title: String!) {\n    mutationCounter(input: { id: $id, title: $title }) {\n      counter {\n        id\n      }\n      errors {\n        field\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_CREATE_COUNTER_ROW = gql`\n  mutation mutationCounterRow($counter: ID!, $date: Date!, $description: String!, $period: String!, $amount: Float!) {\n    mutationCounterRow(\n      input: { counter: $counter, date: $date, description: $description, period: $period, amount: $amount }\n    ) {\n      counterRow {\n        id\n      }\n      errors {\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_UPDATE_COUNTER_ROW = gql`\n  mutation mutationCounterRow(\n    $id: ID!\n    $counter: ID!\n    $date: Date!\n    $description: String!\n    $period: String!\n    $amount: Float!\n  ) {\n    mutationCounterRow(\n      input: { id: $id, counter: $counter, date: $date, description: $description, period: $period, amount: $amount }\n    ) {\n      counterRow {\n        id\n      }\n      errors {\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_DELETE_COUNTER_ROW = gql`\n  mutation mutationDeleteCounterRow($pk: Int!) {\n    mutationDeleteCounterRow(pk: $pk) {\n      success\n    }\n  }\n`;\n\nexport const QUERY_LIST_TOTAL = gql`\n  {\n    listTotal {\n      id\n      title\n    }\n  }\n`;\n\nexport const MUTATION_DELETE_TOTAL = gql`\n  mutation mutationDeleteTotal($pk: Int!) {\n    mutationDeleteTotal(pk: $pk) {\n      success\n    }\n  }\n`;\n\nexport const QUERY_DETAIL_TOTAL = gql`\n  query($id: Int) {\n    detailTotal(id: $id) {\n      id\n      title\n      totalrowSet {\n        id\n        counter {\n          id\n          title\n          counterrowSet {\n            amount\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const MUTATION_CREATE_TOTAL = gql`\n  mutation createTotal($title: String!) {\n    mutationTotal(input: { title: $title }) {\n      total {\n        id\n      }\n      errors {\n        field\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_UPDATE_TOTAL = gql`\n  mutation updateTotal($id: ID!, $title: String!) {\n    mutationTotal(input: { id: $id, title: $title }) {\n      total {\n        id\n      }\n      errors {\n        field\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_CREATE_TOTAL_ROW = gql`\n  mutation mutationTotalRow($total: ID!, $counter: ID!) {\n    mutationTotalRow(input: { total: $total, counter: $counter }) {\n      totalRow {\n        id\n      }\n      errors {\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_UPDATE_TOTAL_ROW = gql`\n  mutation mutationTotalRow($id: ID!, $total: ID!, $counter: ID!) {\n    mutationTotalRow(input: { id: $id, total: $total, counter: $counter }) {\n      totalRow {\n        id\n      }\n      errors {\n        messages\n      }\n    }\n  }\n`;\n\nexport const MUTATION_DELETE_TOTAL_ROW = gql`\n  mutation mutationDeleteTotalRow($pk: Int!) {\n    mutationDeleteTotalRow(pk: $pk) {\n      success\n    }\n  }\n`;\n","import React, { Component } from \"react\";\n\nclass Delete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      confirm: false\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"delete\">\n        {!this.state.confirm ? (\n          <div>\n            <button className=\"button-icon red\" onClick={() => this.setState({ confirm: true })}>\n              <i className=\"fa fa-trash\" />\n            </button>\n          </div>\n        ) : null}\n        {this.state.confirm ? (\n          <div>\n            <button\n              className=\"button-icon green\"\n              onClick={() => {\n                return this.props.onClick();\n              }}\n            >\n              <i className=\"fa fa-check\" />\n            </button>\n            <button className=\"button-icon red\" onClick={() => this.setState({ confirm: false })}>\n              <i className=\"fa fa-times\" />\n            </button>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Delete;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Button = props => {\n  return <Link className=\"button button-plus\" to={props.link}><i className=\"fas fa-plus\" /></Link>;\n};\n\nexport default Button;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Card, CardHeader } from \"../../components/Card/Card\";\nimport Delete from \"../../components/Delete/Delete\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport ButtonPlus from \"../../components/ButtonPlus/ButtonPlus\";\n\nconst List = props => {\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <TwoSections title=\"Your counters\" />\n        </CardHeader>\n        <table>\n          <thead>\n            <tr>\n              <th width=\"5%\">Id</th>\n              <th>Title</th>\n              <th width=\"15%\" />\n            </tr>\n          </thead>\n          <tbody>\n            {props.list.map(item => {\n              return (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n                  <td>\n                    <Link to={\"/counter/\" + item.id}>{item.title}</Link>\n                  </td>\n                  <td>\n                    <Delete onClick={() => props.onDelete(item.id)} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </Card>\n      <ButtonPlus link=\"/counter\" />\n    </div>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport {\n  QUERY_LIST_COUNTER,\n  MUTATION_DELETE_COUNTER\n} from \"../../queries/index\";\nimport Page from \"../../components/Page/Page\";\nimport List from \"./List\";\n\nimport \"./Counters.css\";\n\nclass Counters extends Component {\n  onDelete = id => {\n    this.props.delete({ variables: { pk: id } });\n  };\n\n  render() {\n    let content;\n\n    if (this.props.query.loading) {\n      content = \"Loading...\";\n    } else {\n      content = (\n        <List list={this.props.query.listCounter} onDelete={this.onDelete} />\n      );\n    }\n\n    return <Page title=\"Counters\">{content}</Page>;\n  }\n}\n\nexport default compose(\n  graphql(QUERY_LIST_COUNTER, {\n    name: \"query\",\n    options: { notifyOnNetworkStatusChange: true }\n  }),\n  graphql(MUTATION_DELETE_COUNTER, {\n    name: \"delete\",\n    options: { refetchQueries: [{ query: QUERY_LIST_COUNTER }] }\n  })\n)(Counters);\n","export const formatNumber = number =>\n  number ? number.toLocaleString(\"en\", { minimumFractionDigits: 2, maximumFractionDigits: 2 }) : \"0.00\";\n","import React from \"react\";\n\nimport { formatNumber } from \"../../utils/utils\";\n\nconst Total = props => {\n  return (\n    <span className=\"total\">\n      {props.list.length === 0\n        ? formatNumber(0)\n        : props.list.length === 1\n        ? formatNumber(props.list[0][props.column])\n        : formatNumber(\n            props.list.reduce((total, item) =>\n              total[props.column] ? total[props.column] + item[props.column] : total + item[props.column]\n            )\n          )}{\" \"}\n      &euro;\n    </span>\n  );\n};\n\nexport default Total;\n","import React from \"react\";\n\nimport TwoSections from \"../TwoSections/TwoSections\";\nimport Button from \"../Button/Button\";\n\nconst Modal = props => {\n  return (\n    <div className={props.isVisible ? \"modal\" : \"modal hidden\"}>\n      <div>\n        <TwoSections title={props.title}>\n          <span className=\"pointer\" onClick={props.onCloseModal}>\n            <i className=\"fas fa-times\" />\n          </span>\n        </TwoSections>\n        <div>{props.children}</div>\n        <Button onClick={props.onValidate}>Save</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import React from \"react\";\n\nimport { formatNumber } from \"../../utils/utils\";\nimport FieldText from \"../../components/FieldText/FieldText\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardSection\n} from \"../../components/Card/Card\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport Button from \"../../components/Button/Button\";\nimport Delete from \"../../components/Delete/Delete\";\nimport Total from \"../../components/Total/Total\";\nimport Modal from \"../../components/Modal/Modal\";\n\nconst Detail = props => {\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <TwoSections title=\"Counter detail\">\n            <Button onClick={props.onSave}>Save</Button>\n          </TwoSections>\n        </CardHeader>\n        <CardBody>\n          <div>\n            <FieldText\n              name=\"title\"\n              description=\"Title\"\n              value={props.detail.title}\n              helpText=\"Title of conter\"\n              onChange={props.onChange}\n              error={props.errors.find(error => error.field === \"title\")}\n            />\n          </div>\n        </CardBody>\n        <CardSection>\n          <TwoSections title=\"Rows\">\n            <Button disabled={props.buttonAddDisabled} onClick={props.clickAdd}>\n              Add\n            </Button>\n          </TwoSections>\n        </CardSection>\n        <table>\n          <thead>\n            <tr>\n              <th width=\"5%\">Id</th>\n              <th>Description</th>\n              <th>Date</th>\n              <th>Period</th>\n              <th className=\"align-right\">Amount</th>\n              <th width=\"15%\" />\n            </tr>\n          </thead>\n          <tbody>\n            {props.list &&\n              props.list.map(item => {\n                return (\n                  <tr key={item.id}>\n                    <td>{item.id}</td>\n                    <td>\n                      <button onClick={() => props.clickEdit(item.id)}>\n                        {item.description}\n                      </button>\n                    </td>\n                    <td>{item.date}</td>\n                    <td>{item.period}</td>\n                    <td className=\"align-right\">\n                      {formatNumber(item.amount)} &euro;\n                    </td>\n                    <td>\n                      <Delete onClick={() => props.clickDelete(item.id)} />\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colSpan={5} className=\"align-right\">\n                <Total list={props.list || []} column=\"amount\" />\n              </td>\n              <td colSpan={1} />\n            </tr>\n          </tfoot>\n        </table>\n      </Card>\n      <Modal\n        title=\"Add a counter row\"\n        isVisible={props.modalVisible}\n        onCloseModal={props.closeModal}\n        onValidate={props.onSaveRow}\n      >\n        <div className=\"grid\">\n          <div className=\"col-2\">\n            <FieldText\n              type=\"date\"\n              name=\"date\"\n              description=\"Date\"\n              value={props.rowDetail.date}\n              helpText=\"Date of counter row\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(error => error.field === \"date\")}\n            />\n          </div>\n          <div className=\"col-6\">\n            <FieldText\n              name=\"description\"\n              description=\"Description\"\n              value={props.rowDetail.description}\n              helpText=\"Description of counter row\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(\n                error => error.field === \"description\"\n              )}\n            />\n          </div>\n          <div className=\"col-2\">\n            <FieldText\n              name=\"period\"\n              description=\"Period\"\n              value={props.rowDetail.period}\n              helpText=\"Period of counter row\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(error => error.field === \"period\")}\n            />\n          </div>\n          <div className=\"col-2\">\n            <FieldText\n              name=\"amount\"\n              description=\"Amount\"\n              value={props.rowDetail.amount}\n              helpText=\"Amount of counter row\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(error => error.field === \"amount\")}\n            />\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport {\n  QUERY_DETAIL_COUNTER,\n  MUTATION_CREATE_COUNTER,\n  MUTATION_UPDATE_COUNTER,\n  QUERY_LIST_COUNTER,\n  MUTATION_CREATE_COUNTER_ROW,\n  MUTATION_UPDATE_COUNTER_ROW,\n  MUTATION_DELETE_COUNTER_ROW\n} from \"../../queries/index\";\nimport Page from \"../../components/Page/Page\";\nimport Detail from \"./Detail\";\n\nimport \"./Counter.css\";\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: 0,\n      detail: { title: \"\" },\n      errors: [],\n      rowDetail: { description: \"\", date: \"\", period: \"\", amount: \"\" },\n      rowErrors: [],\n      modalVisible: false\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.query.detailCounter) {\n      this.setState({ id: props.match.params.id });\n      this.setState({ detail: props.query.detailCounter });\n    }\n  }\n\n  onSave = () => this.save().then(response => this.errorOrRedirect(response));\n\n  onSaveRow = () => this.saveRow().then(response => this.errorOrCloseModal(response));\n\n  save = () => {\n    if (this.state.id) {\n      return this.props.update({\n        variables: { id: this.state.id, title: this.state.detail.title }\n      });\n    }\n    return this.props.create({ variables: { ...this.state.detail } });\n  };\n\n  saveRow = () => {\n    if (this.state.rowDetail.id) {\n      return this.props.updateRow({\n        variables: { ...this.state.rowDetail, counter: this.state.id }\n      });\n    }\n    return this.props.createRow({\n      variables: { ...this.state.rowDetail, counter: this.state.id }\n    });\n  };\n\n  error = response => this.setState({ errors: response.data.mutationCounter.errors });\n\n  errorRow = response => this.setState({ rowErrors: response.data.mutationCounterRow.errors });\n\n  resetRow = () =>\n    this.setState({\n      rowDetail: { description: \"\", date: \"\", period: \"\", amount: \"\" },\n      rowErrors: []\n    });\n\n  errorOrRedirect = response => {\n    if (response.data.mutationCounter.errors.length > 0) {\n      return this.error(response);\n    }\n    return this.props.history.push(\"/counter/\" + response.data.mutationCounter.counter.id);\n  };\n\n  errorOrOpenModalOnAdd = response => {\n    if (response.data.mutationCounter.errors.length > 0) {\n      return this.error(response);\n    }\n    this.resetRow();\n    return this.openModal();\n  };\n\n  errorOrOpenModalOnEdit = (response, id) => {\n    if (response.data.mutationCounter.errors.length > 0) {\n      return this.error(response);\n    }\n\n    const detail = this.state.detail.counterrowSet.find(row => row.id === id);\n\n    this.setState({ rowDetail: detail });\n\n    return this.openModal();\n  };\n\n  errorOrCloseModal = response => {\n    if (response.data.mutationCounterRow.errors.length > 0) {\n      this.errorRow(response);\n    }\n    this.resetRow();\n    return this.closeModal();\n  };\n\n  openModal = () => this.setState({ modalVisible: true });\n\n  closeModal = () => this.setState({ modalVisible: false });\n\n  clickAdd = () => this.save().then(response => this.errorOrOpenModalOnAdd(response));\n\n  onChange = e =>\n    this.setState({\n      detail: { ...this.state.detail, [e.target.name]: e.target.value }\n    });\n\n  onChangeRow = e =>\n    this.setState({\n      rowDetail: { ...this.state.rowDetail, [e.target.name]: e.target.value }\n    });\n\n  clickEdit = id => this.save().then(response => this.errorOrOpenModalOnEdit(response, id));\n\n  clickDelete = id => this.props.delete({ variables: { pk: id } });\n\n  buttonAddDisabled = () => this.state.id === 0;\n\n  render() {\n    let content;\n\n    if (this.props.query.loading) {\n      content = \"Loading...\";\n    } else {\n      content = (\n        <Detail\n          detail={this.state.detail}\n          onChange={this.onChange}\n          onSave={this.onSave}\n          errors={this.state.errors}\n          list={this.state.detail.counterrowSet}\n          clickAdd={this.clickAdd}\n          closeModal={this.closeModal}\n          modalVisible={this.state.modalVisible}\n          rowDetail={this.state.rowDetail}\n          rowErrors={this.state.rowErrors}\n          onChangeRow={this.onChangeRow}\n          onSaveRow={this.onSaveRow}\n          clickEdit={this.clickEdit}\n          clickDelete={this.clickDelete}\n          buttonAddDisabled={this.buttonAddDisabled()}\n        />\n      );\n    }\n\n    return <Page title=\"Counter\">{content}</Page>;\n  }\n}\n\nexport default compose(\n  graphql(QUERY_DETAIL_COUNTER, {\n    name: \"query\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      variables: { id: props.match.params.id },\n      fetchPolicy: \"network-only\"\n    })\n  }),\n  graphql(MUTATION_CREATE_COUNTER, {\n    name: \"create\",\n    options: { refetchQueries: [{ query: QUERY_LIST_COUNTER }] }\n  }),\n  graphql(MUTATION_UPDATE_COUNTER, {\n    name: \"update\",\n    options: { refetchQueries: [{ query: QUERY_LIST_COUNTER }] }\n  }),\n  graphql(MUTATION_CREATE_COUNTER_ROW, {\n    name: \"createRow\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_COUNTER,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(MUTATION_UPDATE_COUNTER_ROW, {\n    name: \"updateRow\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_COUNTER,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(MUTATION_DELETE_COUNTER_ROW, {\n    name: \"delete\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_COUNTER,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  })\n)(Counter);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Card, CardHeader } from \"../../components/Card/Card\";\nimport Delete from \"../../components/Delete/Delete\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport ButtonPlus from \"../../components/ButtonPlus/ButtonPlus\";\n\nconst List = props => {\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <TwoSections title=\"Your totals\" />\n        </CardHeader>\n        <table>\n          <thead>\n            <tr>\n              <th width=\"5%\">Id</th>\n              <th>Title</th>\n              <th width=\"15%\" />\n            </tr>\n          </thead>\n          <tbody>\n            {props.list.map(item => {\n              return (\n                <tr key={item.id}>\n                  <td>{item.id}</td>\n                  <td>\n                    <Link to={\"/total/\" + item.id}>{item.title}</Link>\n                  </td>\n                  <td>\n                    <Delete onClick={() => props.onDelete(item.id)} />\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </Card>\n      <ButtonPlus link=\"/total\" />\n    </div>\n  );\n};\n\nexport default List;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport { QUERY_LIST_TOTAL, MUTATION_DELETE_TOTAL } from \"../../queries/index\";\nimport Page from \"../../components/Page/Page\";\nimport List from \"./List\";\n\nimport \"./Totals.css\";\n\nclass Totals extends Component {\n  onDelete = id => {\n    this.props.delete({ variables: { pk: id } });\n  };\n\n  render() {\n    let content;\n\n    if (this.props.query.loading) {\n      content = \"Loading...\";\n    } else {\n      content = <List list={this.props.query.listTotal} onDelete={this.onDelete} />;\n    }\n\n    return <Page title=\"Totals\">{content}</Page>;\n  }\n}\n\nexport default compose(\n  graphql(QUERY_LIST_TOTAL, {\n    name: \"query\",\n    options: { notifyOnNetworkStatusChange: true }\n  }),\n  graphql(MUTATION_DELETE_TOTAL, {\n    name: \"delete\",\n    options: { refetchQueries: [{ query: QUERY_LIST_TOTAL }] }\n  })\n)(Totals);\n","import React from \"react\";\n\nconst FieldSelect = props => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={props.name}>{props.description}</label>\n      <select name={props.name} value={props.value} onChange={props.onChange}>\n        {props.options.map(option => (\n          <option value={option.value}>{option.label}</option>\n        ))}\n      </select>\n      <small>{props.error && props.error.messages.join(\", \")}</small>\n    </div>\n  );\n};\n\nexport default FieldSelect;\n","import React from \"react\";\n\nimport { formatNumber } from \"../../utils/utils\";\nimport FieldText from \"../../components/FieldText/FieldText\";\nimport FieldSelect from \"../../components/FieldSelect/FieldSelect\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardSection\n} from \"../../components/Card/Card\";\nimport TwoSections from \"../../components/TwoSections/TwoSections\";\nimport Button from \"../../components/Button/Button\";\nimport Delete from \"../../components/Delete/Delete\";\nimport Total from \"../../components/Total/Total\";\nimport Modal from \"../../components/Modal/Modal\";\n\nconst Detail = props => {\n  return (\n    <div>\n      <Card>\n        <CardHeader>\n          <TwoSections title=\"Total detail\">\n            <Button onClick={props.onSave}>Save</Button>\n          </TwoSections>\n        </CardHeader>\n        <CardBody>\n          <div>\n            <FieldText\n              name=\"title\"\n              description=\"Title\"\n              value={props.detail.title}\n              helpText=\"Title of total\"\n              onChange={props.onChange}\n              error={props.errors.find(error => error.field === \"title\")}\n            />\n          </div>\n        </CardBody>\n        <CardSection>\n          <TwoSections title=\"Rows\">\n            <Button disabled={props.buttonAddDisabled} onClick={props.clickAdd}>\n              Add\n            </Button>\n          </TwoSections>\n        </CardSection>\n        <table>\n          <thead>\n            <tr>\n              <th width=\"5%\">Id</th>\n              <th>Counter</th>\n              <th className=\"align-right\">Amount</th>\n              <th width=\"15%\" />\n            </tr>\n          </thead>\n          <tbody>\n            {props.list &&\n              props.list.map(item => {\n                return (\n                  <tr key={item.id}>\n                    <td>{item.id}</td>\n                    <td>\n                      <button onClick={() => props.clickEdit(item.id)}>\n                        {item.counter.title}\n                      </button>\n                    </td>\n                    <td className=\"align-right\">\n                      {formatNumber(item.amount)} &euro;\n                    </td>\n                    <td>\n                      <Delete onClick={() => props.clickDelete(item.id)} />\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n          <tfoot>\n            <tr>\n              <td colSpan={3} className=\"align-right\">\n                <Total list={props.list || []} column=\"amount\" />\n              </td>\n              <td colSpan={1} />\n            </tr>\n          </tfoot>\n        </table>\n      </Card>\n      <Modal\n        title=\"Add a total row\"\n        isVisible={props.modalVisible}\n        onCloseModal={props.closeModal}\n        onValidate={props.onSaveRow}\n      >\n        <div className=\"grid\">\n          <div className=\"col-6\">\n            <FieldSelect\n              name=\"counter\"\n              description=\"Counter\"\n              value={props.rowDetail.counter}\n              options={props.counterList}\n              helpText=\"Counter\"\n              onChange={props.onChangeRow}\n              error={props.rowErrors.find(error => error.field === \"date\")}\n            />\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Detail;\n","import React, { Component } from \"react\";\nimport { graphql, compose } from \"react-apollo\";\n\nimport {\n  QUERY_DETAIL_TOTAL,\n  MUTATION_CREATE_TOTAL,\n  MUTATION_UPDATE_TOTAL,\n  QUERY_LIST_TOTAL,\n  MUTATION_CREATE_TOTAL_ROW,\n  MUTATION_UPDATE_TOTAL_ROW,\n  MUTATION_DELETE_TOTAL_ROW,\n  QUERY_LIST_COUNTER\n} from \"../../queries/index\";\nimport Page from \"../../components/Page/Page\";\nimport Detail from \"./Detail\";\n\nimport \"./Total.css\";\n\nclass Total extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: 0,\n      detail: { title: \"\" },\n      errors: [],\n      rowDetail: { description: \"\", date: \"\", period: \"\", amount: \"\" },\n      rowErrors: [],\n      modalVisible: false\n    };\n  }\n\n  componentWillReceiveProps(props) {\n    if (props.query.detailTotal) {\n      this.setState({ id: props.match.params.id });\n      this.setState({ detail: props.query.detailTotal });\n    }\n  }\n\n  onSave = () => this.save().then(response => this.errorOrRedirect(response));\n\n  onSaveRow = () => this.saveRow().then(response => this.errorOrCloseModal(response));\n\n  save = () => {\n    if (this.state.id) {\n      return this.props.update({\n        variables: { id: this.state.id, title: this.state.detail.title }\n      });\n    }\n    return this.props.create({ variables: { ...this.state.detail } });\n  };\n\n  saveRow = () => {\n    if (this.state.rowDetail.id) {\n      return this.props.updateRow({\n        variables: { ...this.state.rowDetail, total: this.state.id }\n      });\n    }\n    return this.props.createRow({\n      variables: { ...this.state.rowDetail, total: this.state.id }\n    });\n  };\n\n  error = response => this.setState({ errors: response.data.mutationTotal.errors });\n\n  errorRow = response => this.setState({ rowErrors: response.data.mutationTotalRow.errors });\n\n  resetRow = () =>\n    this.setState({\n      rowDetail: { counter: 0 },\n      rowErrors: []\n    });\n\n  errorOrRedirect = response => {\n    if (response.data.mutationTotal.errors.length > 0) {\n      return this.error(response);\n    }\n    return this.props.history.push(\"/total/\" + response.data.mutationTotal.total.id);\n  };\n\n  errorOrOpenModalOnAdd = response => {\n    if (response.data.mutationTotal.errors.length > 0) {\n      return this.error(response);\n    }\n    this.resetRow();\n    return this.openModal();\n  };\n\n  errorOrOpenModalOnEdit = (response, id) => {\n    if (response.data.mutationTotal.errors.length > 0) {\n      return this.error(response);\n    }\n\n    const detail = this.state.detail.totalrowSet.find(row => row.id === id);\n\n    this.setState({ rowDetail: detail });\n\n    return this.openModal();\n  };\n\n  errorOrCloseModal = response => {\n    if (response.data.mutationTotalRow.errors.length > 0) {\n      this.errorRow(response);\n    }\n    this.resetRow();\n    return this.closeModal();\n  };\n\n  openModal = () => this.setState({ modalVisible: true });\n\n  closeModal = () => this.setState({ modalVisible: false });\n\n  clickAdd = () => this.save().then(response => this.errorOrOpenModalOnAdd(response));\n\n  onChange = e =>\n    this.setState({\n      detail: { ...this.state.detail, [e.target.name]: e.target.value }\n    });\n\n  onChangeRow = e =>\n    this.setState({\n      rowDetail: { ...this.state.rowDetail, [e.target.name]: e.target.value }\n    });\n\n  clickEdit = id => this.save().then(response => this.errorOrOpenModalOnEdit(response, id));\n\n  clickDelete = id => this.props.delete({ variables: { pk: id } });\n\n  buttonAddDisabled = () => this.state.id === 0;\n\n  adaptCounterList = () => {\n    let result = [];\n    this.props.queryListCounter.listCounter.map(counter => result.push({ value: counter.id, label: counter.title }));\n    return result;\n  };\n\n  adaptTotalRowList = () => {\n    let result = [];\n    this.state.detail.totalrowSet.map(totalRow => {\n      const amount = totalRow.counter.counterrowSet.reduce((sum, value) => sum + value.amount, 0);\n      result.push({ ...totalRow, amount });\n      return null;\n    });\n    return result;\n  };\n\n  render() {\n    let content;\n\n    if (this.props.query.loading || this.props.queryListCounter.loading) {\n      content = \"Loading...\";\n    } else {\n      content = (\n        <Detail\n          detail={this.state.detail}\n          onChange={this.onChange}\n          onSave={this.onSave}\n          errors={this.state.errors}\n          list={this.adaptTotalRowList()}\n          clickAdd={this.clickAdd}\n          closeModal={this.closeModal}\n          modalVisible={this.state.modalVisible}\n          rowDetail={this.state.rowDetail}\n          rowErrors={this.state.rowErrors}\n          onChangeRow={this.onChangeRow}\n          onSaveRow={this.onSaveRow}\n          clickEdit={this.clickEdit}\n          clickDelete={this.clickDelete}\n          buttonAddDisabled={this.buttonAddDisabled()}\n          counterList={this.adaptCounterList()}\n        />\n      );\n    }\n\n    return <Page title=\"Total\">{content}</Page>;\n  }\n}\n\nexport default compose(\n  graphql(QUERY_DETAIL_TOTAL, {\n    name: \"query\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      variables: { id: props.match.params.id },\n      fetchPolicy: \"network-only\"\n    })\n  }),\n  graphql(MUTATION_CREATE_TOTAL, {\n    name: \"create\",\n    options: { refetchQueries: [{ query: QUERY_LIST_TOTAL }] }\n  }),\n  graphql(MUTATION_UPDATE_TOTAL, {\n    name: \"update\",\n    options: { refetchQueries: [{ query: QUERY_LIST_TOTAL }] }\n  }),\n  graphql(MUTATION_CREATE_TOTAL_ROW, {\n    name: \"createRow\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_TOTAL,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(MUTATION_UPDATE_TOTAL_ROW, {\n    name: \"updateRow\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_TOTAL,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(MUTATION_DELETE_TOTAL_ROW, {\n    name: \"delete\",\n    options: props => ({\n      notifyOnNetworkStatusChange: true,\n      refetchQueries: [\n        {\n          query: QUERY_DETAIL_TOTAL,\n          variables: { id: props.match.params.id }\n        }\n      ]\n    })\n  }),\n  graphql(QUERY_LIST_COUNTER, { name: \"queryListCounter\" })\n)(Total);\n","import React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\n\nimport { PrivateRoute } from \"../../utils/ProvateRoute\";\nimport Demo from \"../Demo/Demo\";\nimport Login from \"../Login/Login\";\nimport Dashboard from \"../Dashboard/Dashboard\"\nimport Counters from \"../Counters/Counters\"\nimport Counter from \"../Counter/Counter\"\nimport Totals from \"../Totals/Totals\"\nimport Total from \"../Total/Total\"\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/demo\" component={Demo} />\n        <PrivateRoute exact path=\"/\" component={Dashboard} />\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n        <PrivateRoute exact path=\"/counters\" component={Counters} />\n        <PrivateRoute exact path=\"/counter\" component={Counter} />\n        <PrivateRoute exact path=\"/counter/:id\" component={Counter} />\n        <PrivateRoute exact path=\"/totals\" component={Totals} />\n        <PrivateRoute exact path=\"/total\" component={Total} />\n        <PrivateRoute exact path=\"/total/:id\" component={Total} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { ApolloProvider } from \"react-apollo\";\n\nimport client from \"./store/client\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./index.css\"\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}